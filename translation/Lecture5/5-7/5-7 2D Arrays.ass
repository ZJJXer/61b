[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.709
PlayResX: 1280
PlayResY: 694

[Aegisub Project Garbage]
Audio File: 5-7 2D Arrays.mp4
Video File: 5-7 2D Arrays.mp4
Video AR Mode: 4
Video AR Value: 1.844380
Video Zoom Percent: 0.750000
Scroll Position: 208
Active Line: 220
Video Position: 11833

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,13,&H00FFFFFF,&H000019FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,1.30451,1.30451,2,7,7,1,1
Style: zh - 黄色,微软雅黑,39,&H007BF8FF,&H000019FF,&H00000000,&H00000000,-1,0,0,0,100,100,0.653061,0,1,1.95677,0,2,2,2,4,1
Style: en - 白色,Yu Gothic UI,29,&H00FFFFFF,&H000019FF,&H55000000,&H63000000,-1,0,0,0,100,100,0,0,1,2.60902,0,2,2,2,5,1
Style: 翻译人员专属 - 左下角,微软雅黑,38,&H0089E1FF,&H000019FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,1.95677,0,1,27,21,22,1
Style: 翻译人员专属 - 片尾（左上角）,微软雅黑,38,&H0089E1FF,&H000019FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,1.95677,0,7,27,21,22,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:03.00,翻译人员专属 - 片尾（左上角）,,0,0,0,, 翻译：@隐秀_（seriouszyx）
Dialogue: 0,0:00:00.86,0:00:03.29,en - 白色,,0,0,0,,As a test of our deep understanding of arrays,
Dialogue: 0,0:00:00.86,0:00:03.29,zh - 黄色,,0,0,0,,为了测试我们对数组理解的深入程度
Dialogue: 0,0:00:03.64,0:00:06.24,en - 白色,,0,0,0,,let's talk about two-dimensional arrays in Java now.
Dialogue: 0,0:00:03.64,0:00:06.24,zh - 黄色,,0,0,0,,让我们讨论一下 Java 中的二维数组
Dialogue: 0,0:00:06.24,0:00:08.96,en - 白色,,0,0,0,,So we're not going to be using these in class for a little while,
Dialogue: 0,0:00:06.24,0:00:08.96,zh - 黄色,,0,0,0,,我们暂时不会在课堂上使用这些东西
Dialogue: 0,0:00:09.39,0:00:12.44,en - 白色,,0,0,0,,but just to get acquainted with them, let's check them out today.
Dialogue: 0,0:00:09.39,0:00:12.44,zh - 黄色,,0,0,0,,不过为了熟悉一下，来看一看
Dialogue: 0,0:00:13.12,0:00:14.46,en - 白色,,0,0,0,,So here I'm going to have a bunch of code--
Dialogue: 0,0:00:13.12,0:00:14.46,zh - 黄色,,0,0,0,,我这里有一堆代码
Dialogue: 0,0:00:14.46,0:00:16.88,en - 白色,,0,0,0,,which I'm just going to jump straight to the Visualizer on this one--
Dialogue: 0,0:00:14.46,0:00:16.88,zh - 黄色,,0,0,0,,这次直接跳到 visualizer
Dialogue: 0,0:00:17.19,0:00:22.24,en - 白色,,0,0,0,,which is going to allow us to create arrays of array references.
Dialogue: 0,0:00:17.19,0:00:22.24,zh - 黄色,,0,0,0,,这允许我们创建数组引用的数组
Dialogue: 0,0:00:23.88,0:00:27.86,en - 白色,,0,0,0,,So the syntax in Java for making what in other languages--
Dialogue: 0,0:00:23.88,0:00:27.86,zh - 黄色,,0,0,0,,Java 中的语法来制作其他语言中的...
Dialogue: 0,0:00:27.86,0:00:31.04,en - 白色,,0,0,0,,well, what you might call a two-dimensional array is as follows.
Dialogue: 0,0:00:27.86,0:00:31.04,zh - 黄色,,0,0,0,,可能称之为二维数组
Dialogue: 0,0:00:31.75,0:00:36.50,en - 白色,,0,0,0,,When I do int bracket, int square braces, square braces,
Dialogue: 0,0:00:31.75,0:00:36.50,zh - 黄色,,0,0,0,,执行 int[][] 时
Dialogue: 0,0:00:36.85,0:00:40.56,en - 白色,,0,0,0,,what it's saying is make for me an array of integer array references.
Dialogue: 0,0:00:36.85,0:00:40.56,zh - 黄色,,0,0,0,,为我创建一个整型数组引用的数组
Dialogue: 0,0:00:41.25,0:00:42.48,en - 白色,,0,0,0,,So here we got one box.
Dialogue: 0,0:00:41.25,0:00:42.48,zh - 黄色,,0,0,0,,这里得到一个盒子
Dialogue: 0,0:00:42.84,0:00:47.57,en - 白色,,0,0,0,,And it's allowed to store a reference to a list of inter array references.
Dialogue: 0,0:00:42.84,0:00:47.57,zh - 黄色,,0,0,0,,它允许存储数组引用的数组的引用
Dialogue: 0,0:00:48.00,0:00:49.70,en - 白色,,0,0,0,,So let's see an example here.
Dialogue: 0,0:00:48.00,0:00:49.70,zh - 黄色,,0,0,0,,来看一个例子
Dialogue: 0,0:00:50.28,0:00:52.84,en - 白色,,0,0,0,,So when I say pascalsTriangle equals new int 4,
Dialogue: 0,0:00:50.28,0:00:52.84,zh - 黄色,,0,0,0,,执行 pascalsTrangle = new int[4][]
Dialogue: 0,0:00:52.99,0:00:59.04,en - 白色,,0,0,0,,what that's going to do is going to create an array of int array references.
Dialogue: 0,0:00:52.99,0:00:59.04,zh - 黄色,,0,0,0,,这将创建一个整型数组引用的数组
Dialogue: 0,0:00:59.34,0:01:01.70,en - 白色,,0,0,0,,Each of these is allowed to point at an array.
Dialogue: 0,0:00:59.34,0:01:01.70,zh - 黄色,,0,0,0,,其中的每一项都允许指向一个数组
Dialogue: 0,0:01:02.68,0:01:03.39,en - 白色,,0,0,0,,An array of what?
Dialogue: 0,0:01:02.68,0:01:03.39,zh - 黄色,,0,0,0,,什么数组？
Dialogue: 0,0:01:03.39,0:01:04.36,en - 白色,,0,0,0,,Of integers.
Dialogue: 0,0:01:03.39,0:01:04.36,zh - 黄色,,0,0,0,,整型数组
Dialogue: 0,0:01:05.43,0:01:10.06,en - 白色,,0,0,0,,And this right here is a 64-bit address of this array of array references.
Dialogue: 0,0:01:05.43,0:01:10.06,zh - 黄色,,0,0,0,,这里是这个数组引用数组的64位地址
Dialogue: 0,0:01:10.83,0:01:13.04,en - 白色,,0,0,0,,Getting a little, but don't worry.
Dialogue: 0,0:01:10.83,0:01:13.04,zh - 黄色,,0,0,0,,别担心
Dialogue: 0,0:01:13.78,0:01:19.72,en - 白色,,0,0,0,,Now just as we could anytime, we could create a variable of the type of these boxes.
Dialogue: 0,0:01:13.78,0:01:19.72,zh - 黄色,,0,0,0,,我们可以创建这些盒子类型的变量
Dialogue: 0,0:01:19.72,0:01:21.32,en - 白色,,0,0,0,,So what's the type of each of these boxes?
Dialogue: 0,0:01:19.72,0:01:21.32,zh - 黄色,,0,0,0,,这些盒子都是什么类型的呢？
Dialogue: 0,0:01:21.57,0:01:22.96,en - 白色,,0,0,0,,Int array references.
Dialogue: 0,0:01:21.57,0:01:22.96,zh - 黄色,,0,0,0,,整型数组引用
Dialogue: 0,0:01:23.37,0:01:27.01,en - 白色,,0,0,0,,So I can make a new such variable and assign it equal, and copy of the bits.
Dialogue: 0,0:01:23.37,0:01:27.01,zh - 黄色,,0,0,0,,所以我可以创建一个新的变量，并复制这些位
Dialogue: 0,0:01:28.44,0:01:29.20,en - 白色,,0,0,0,,There you go.
Dialogue: 0,0:01:28.44,0:01:29.20,zh - 黄色,,0,0,0,,这样
Dialogue: 0,0:01:30.46,0:01:32.67,en - 白色,,0,0,0,,We'll have a more interesting example down here.
Dialogue: 0,0:01:30.46,0:01:32.67,zh - 黄色,,0,0,0,,下面会有一个更有趣的例子
Dialogue: 0,0:01:33.84,0:01:35.16,en - 白色,,0,0,0,,Next up, we could say, you know what?
Dialogue: 0,0:01:33.84,0:01:35.16,zh - 黄色,,0,0,0,,接下来
Dialogue: 0,0:01:35.56,0:01:36.78,en - 白色,,0,0,0,,I'm tired of this being null.
Dialogue: 0,0:01:35.56,0:01:36.78,zh - 黄色,,0,0,0,,我厌倦了这一切都是 null
Dialogue: 0,0:01:36.99,0:01:38.99,en - 白色,,0,0,0,,In fact, I want to point it at an int array,
Dialogue: 0,0:01:36.99,0:01:38.99,zh - 黄色,,0,0,0,,实际上我想把它指向一个整型数组
Dialogue: 0,0:01:38.99,0:01:40.33,en - 白色,,0,0,0,,because that's what it's for it.
Dialogue: 0,0:01:38.99,0:01:40.33,zh - 黄色,,0,0,0,,这就是它的意义
Dialogue: 0,0:01:40.33,0:01:42.14,en - 白色,,0,0,0,,This is an array of looking at int arrays.
Dialogue: 0,0:01:40.33,0:01:42.14,zh - 黄色,,0,0,0,,这是一个查看整型数组的数组
Dialogue: 0,0:01:42.94,0:01:46.68,en - 白色,,0,0,0,,So what we're going to do is create here an array of size 1,
Dialogue: 0,0:01:42.94,0:01:46.68,zh - 黄色,,0,0,0,,所以我们要创建一个大小为1的数组
Dialogue: 0,0:01:46.68,0:01:49.30,en - 白色,,0,0,0,,which contains a value 1, and point this at--
Dialogue: 0,0:01:46.68,0:01:49.30,zh - 黄色,,0,0,0,,它包含值1，并指向它
Dialogue: 0,0:01:50.43,0:01:52.40,en - 白色,,0,0,0,,the Visualizer does that for us.
Dialogue: 0,0:01:50.43,0:01:52.40,zh - 黄色,,0,0,0,,visualizer 展示了
Dialogue: 0,0:01:53.98,0:01:55.57,en - 白色,,0,0,0,,So next up, we say, OK, you know what?
Dialogue: 0,0:01:53.98,0:01:55.57,zh - 黄色,,0,0,0,,接下来
Dialogue: 0,0:01:55.57,0:01:56.77,en - 白色,,0,0,0,,I'm tired of this being null.
Dialogue: 0,0:01:55.57,0:01:56.77,zh - 黄色,,0,0,0,,我厌倦了这一切都是 null
Dialogue: 0,0:01:56.77,0:02:00.56,en - 白色,,0,0,0,,So I'm going to make a new array of 2, size 2, and point this at it.
Dialogue: 0,0:01:56.77,0:02:00.56,zh - 黄色,,0,0,0,,我要创建一个大小为2的数，然后指向它
Dialogue: 0,0:02:00.93,0:02:03.52,en - 白色,,0,0,0,,Kind of a funny way of drawing this, but there you go.
Dialogue: 0,0:02:00.93,0:02:03.52,zh - 黄色,,0,0,0,,画的方式有点奇怪，但就这样
Dialogue: 0,0:02:04.98,0:02:06.81,en - 白色,,0,0,0,,Now we say OK, same deal.
Dialogue: 0,0:02:04.98,0:02:06.81,zh - 黄色,,0,0,0,,同样
Dialogue: 0,0:02:06.81,0:02:11.71,en - 白色,,0,0,0,,We're going to repeat this and create two more int arrays and point our pointers at it.
Dialogue: 0,0:02:06.81,0:02:11.71,zh - 黄色,,0,0,0,,重复这个过程，再创建两个整型数组，并将指针指向它
Dialogue: 0,0:02:13.71,0:02:16.13,en - 白色,,0,0,0,,So actually if you are visualizing this stuff later,
Dialogue: 0,0:02:13.71,0:02:16.13,zh - 黄色,,0,0,0,,实际上，如果你以后再使用 visualizer
Dialogue: 0,0:02:16.51,0:02:18.48,en - 白色,,0,0,0,,for your reference there is an option,
Dialogue: 0,0:02:16.51,0:02:18.48,zh - 黄色,,0,0,0,,这有个选项供参考
Dialogue: 0,0:02:19.53,0:02:24.03,en - 白色,,0,0,0,,same one we had before which prefers non-nesting layouts, where we get box and pointer diagrams.
Dialogue: 0,0:02:19.53,0:02:24.03,zh - 黄色,,0,0,0,,与以前一样，它倾向非嵌套布局，可以得到框图和指针图
Dialogue: 0,0:02:24.03,0:02:26.41,en - 白色,,0,0,0,,It also makes us have vertical layouts.
Dialogue: 0,0:02:24.03,0:02:26.41,zh - 黄色,,0,0,0,,还提供垂直布局
Dialogue: 0,0:02:28.25,0:02:33.52,en - 白色,,0,0,0,,So if we rerun that, now we get what might be a little to read.
Dialogue: 0,0:02:28.25,0:02:33.52,zh - 黄色,,0,0,0,,重新运行，现在得到的东西更易读
Dialogue: 0,0:02:35.46,0:02:37.18,en - 白色,,0,0,0,,Next up, we have rowTwo.
Dialogue: 0,0:02:35.46,0:02:37.18,zh - 黄色,,0,0,0,,接下来我们有 rowTwo
Dialogue: 0,0:02:37.47,0:02:43.19,en - 白色,,0,0,0,,This line, what it does is, it creates a box of 64 bits that can store a reference to an int array, one of these.
Dialogue: 0,0:02:37.47,0:02:43.19,zh - 黄色,,0,0,0,,这行的作用是，它创建了一个64位的盒子，可以存储整型数组的引用
Dialogue: 0,0:02:43.80,0:02:46.42,en - 白色,,0,0,0,,And then we point that at pascalsTriangle2.
Dialogue: 0,0:02:43.80,0:02:46.42,zh - 黄色,,0,0,0,,然后将其指向 pascalsTriangle[2]
Dialogue: 0,0:02:46.42,0:02:47.13,en - 白色,,0,0,0,,So what do we do?
Dialogue: 0,0:02:46.42,0:02:47.13,zh - 黄色,,0,0,0,,该怎么做呢？
Dialogue: 0,0:02:47.13,0:02:48.55,en - 白色,,0,0,0,,We copy the bits.
Dialogue: 0,0:02:47.13,0:02:48.55,zh - 黄色,,0,0,0,,复制这些位
Dialogue: 0,0:02:48.87,0:02:49.81,en - 白色,,0,0,0,,What are the bits?
Dialogue: 0,0:02:48.87,0:02:49.81,zh - 黄色,,0,0,0,,位是什么？
Dialogue: 0,0:02:49.81,0:02:50.81,en - 白色,,0,0,0,,This arrow.
Dialogue: 0,0:02:49.81,0:02:50.81,zh - 黄色,,0,0,0,,这个箭头
Dialogue: 0,0:02:51.32,0:02:53.39,en - 白色,,0,0,0,,So in other words, rowTwo points at this.
Dialogue: 0,0:02:51.32,0:02:53.39,zh - 黄色,,0,0,0,,换句话说，rowTwo 指向这里
Dialogue: 0,0:02:54.71,0:03:04.44,en - 白色,,0,0,0,,So what's interesting about this is that we could actually modify our original pascalsTriangle object, up here, using this rowTwo reference.
Dialogue: 0,0:02:54.71,0:03:04.44,zh - 黄色,,0,0,0,,有趣的是，我们可以使用这个 rowTwo 引用修改原来的 pascalsTriangle 对象
Dialogue: 0,0:03:04.44,0:03:08.60,en - 白色,,0,0,0,,So in your mind, you might think of it as OK, well, it's like a sequence of arrays.
Dialogue: 0,0:03:04.44,0:03:08.60,zh - 黄色,,0,0,0,,在你脑海里，把它想象成一个数组序列
Dialogue: 0,0:03:08.97,0:03:11.76,en - 白色,,0,0,0,,And it's called pascalsTriangle.
Dialogue: 0,0:03:08.97,0:03:11.76,zh - 黄色,,0,0,0,,这就是 pascalsTriangle
Dialogue: 0,0:03:12.03,0:03:14.31,en - 白色,,0,0,0,,I can actually get a hook inside the middle of it.
Dialogue: 0,0:03:12.03,0:03:14.31,zh - 黄色,,0,0,0,,实际上，我可以在它中间弄一个钩子
Dialogue: 0,0:03:14.31,0:03:17.07,en - 白色,,0,0,0,,I'm just going right into the belly of that pascalsTriangle.
Dialogue: 0,0:03:14.31,0:03:17.07,zh - 黄色,,0,0,0,,直奔 pascalsTriangle 的腹部
Dialogue: 0,0:03:17.07,0:03:21.12,en - 白色,,0,0,0,,And I can, for example, say rowTwo, item 1 is now minus 5.
Dialogue: 0,0:03:17.07,0:03:21.12,zh - 黄色,,0,0,0,,举个例子，令 rowTwo 的第1项为-5
Dialogue: 0,0:03:22.35,0:03:24.56,en - 白色,,0,0,0,,So be aware that's possible because they're all the same.
Dialogue: 0,0:03:22.35,0:03:24.56,zh - 黄色,,0,0,0,,要知道这是可能的，因为它们都一样
Dialogue: 0,0:03:26.67,0:03:28.76,en - 白色,,0,0,0,,Alternate ways to instantiate an array,
Dialogue: 0,0:03:26.67,0:03:28.76,zh - 黄色,,0,0,0,,这是数组实例化的替代方式
Dialogue: 0,0:03:29.13,0:03:30.28,en - 白色,,0,0,0,,well, we've seen this one already.
Dialogue: 0,0:03:29.13,0:03:30.28,zh - 黄色,,0,0,0,,我们已经看过了
Dialogue: 0,0:03:30.85,0:03:35.60,en - 白色,,0,0,0,,So if we say matrix equals-- actually, I'm going to go to the non-vertical layout for this part.
Dialogue: 0,0:03:30.85,0:03:35.60,zh - 黄色,,0,0,0,,matrix = ...改一下非垂直布局
Dialogue: 0,0:03:36.09,0:03:37.14,en - 白色,,0,0,0,,I'm going to go back--
Dialogue: 0,0:03:36.09,0:03:37.14,zh - 黄色,,0,0,0,,我要回去了
Dialogue: 0,0:03:41.94,0:03:46.90,en - 白色,,0,0,0,,So one way to create one of these array of arrays is the syntax we had before.
Dialogue: 0,0:03:41.94,0:03:46.90,zh - 黄色,,0,0,0,,创建数组中的数组一种方法是我们之前使用的语法
Dialogue: 0,0:03:47.14,0:03:48.69,en - 白色,,0,0,0,,So that does just what we saw before.
Dialogue: 0,0:03:47.14,0:03:48.69,zh - 黄色,,0,0,0,,这就是我们之前看到的
Dialogue: 0,0:03:48.69,0:03:50.72,en - 白色,,0,0,0,,It creates an array of array references.
Dialogue: 0,0:03:48.69,0:03:50.72,zh - 黄色,,0,0,0,,创建数组引用的数组
Dialogue: 0,0:03:51.24,0:03:54.43,en - 白色,,0,0,0,,But Java actually also allows us to specify a number here.
Dialogue: 0,0:03:51.24,0:03:54.43,zh - 黄色,,0,0,0,,但是 Java 实际上也允许我们在这里指定一个数字
Dialogue: 0,0:03:55.45,0:04:00.45,en - 白色,,0,0,0,,So what this number means is, you know what, I don't want just a bunch of empty array references.
Dialogue: 0,0:03:55.45,0:04:00.45,zh - 黄色,,0,0,0,,这个数字的意思是，我不想要一堆空的数组引用
Dialogue: 0,0:04:00.45,0:04:04.67,en - 白色,,0,0,0,,I want you to, Java, create for me a bunch of default arrays of size 4.
Dialogue: 0,0:04:00.45,0:04:04.67,zh - 黄色,,0,0,0,,我希望 Java 为我创建一组大小为4的默认数组
Dialogue: 0,0:04:04.67,0:04:07.30,en - 白色,,0,0,0,,They will all get the default value for the type here.
Dialogue: 0,0:04:04.67,0:04:07.30,zh - 黄色,,0,0,0,,在这里 它们都将获得该类型的默认值
Dialogue: 0,0:04:08.14,0:04:10.62,en - 白色,,0,0,0,,So in other words, this new matrix declaration
Dialogue: 0,0:04:08.14,0:04:10.62,zh - 黄色,,0,0,0,,换句话说，这个新的矩阵声明
Dialogue: 0,0:04:10.62,0:04:13.62,en - 白色,,0,0,0,,is going to not create just the array of int references,
Dialogue: 0,0:04:10.62,0:04:13.62,zh - 黄色,,0,0,0,,不仅会创建整型引用数组
Dialogue: 0,0:04:13.62,0:04:15.99,en - 白色,,0,0,0,,but also the actual integer arrays.
Dialogue: 0,0:04:13.62,0:04:15.99,zh - 黄色,,0,0,0,,还会创建实际整型数组
Dialogue: 0,0:04:16.47,0:04:19.73,en - 白色,,0,0,0,,So this creates, you can think of it as, if we look at this carefully,
Dialogue: 0,0:04:16.47,0:04:19.73,zh - 黄色,,0,0,0,,所以这就产生了...仔细看一下
Dialogue: 0,0:04:22.80,0:04:25.15,en - 白色,,0,0,0,,this line that we're about to run, it creates one array.
Dialogue: 0,0:04:22.80,0:04:25.15,zh - 黄色,,0,0,0,,运行这行代码，它创建了1个数组
Dialogue: 0,0:04:26.01,0:04:28.50,en - 白色,,0,0,0,,This line actually creates five arrays.
Dialogue: 0,0:04:26.01,0:04:28.50,zh - 黄色,,0,0,0,,这行实际上创建了5个数组
Dialogue: 0,0:04:28.50,0:04:31.77,en - 白色,,0,0,0,,This array, plus this, this, this, and this.
Dialogue: 0,0:04:28.50,0:04:31.77,zh - 黄色,,0,0,0,,这个数组，还有这些
Dialogue: 0,0:04:31.77,0:04:34.81,en - 白色,,0,0,0,,So five total arrays are created-- one of references, four of integers.
Dialogue: 0,0:04:31.77,0:04:34.81,zh - 黄色,,0,0,0,,总共创建了5个数组，1个引用数组，4个整型数组
Dialogue: 0,0:04:36.04,0:04:38.28,en - 白色,,0,0,0,,And if you want to create a literal array,
Dialogue: 0,0:04:36.04,0:04:38.28,zh - 黄色,,0,0,0,,如果你想要创建字面量数组
Dialogue: 0,0:04:38.28,0:04:43.89,en - 白色,,0,0,0,,if you decide that you don't want to have this obviously very wordy way of declaring pascalsTriangle,
Dialogue: 0,0:04:38.28,0:04:43.89,zh - 黄色,,0,0,0,,不想使用这种非常冗长的方式来声明 pascalsTriangle
Dialogue: 0,0:04:44.32,0:04:47.47,en - 白色,,0,0,0,,there is a literal notation for doing two-dimensional arrays.
Dialogue: 0,0:04:44.32,0:04:47.47,zh - 黄色,,0,0,0,,有一种创建二维数组的字面量表示法
Dialogue: 0,0:04:48.43,0:04:52.33,en - 白色,,0,0,0,,So in that case, we would just get the same thing laid out a little differently for some reason.
Dialogue: 0,0:04:48.43,0:04:52.33,zh - 黄色,,0,0,0,,这种情况下会得到几乎相同的布局
Dialogue: 0,0:04:53.70,0:04:56.54,en - 白色,,0,0,0,,So that is the heart of what makes a two-dimensional array.
Dialogue: 0,0:04:53.70,0:04:56.54,zh - 黄色,,0,0,0,,这就是构造二维数组的核心
Dialogue: 0,0:04:58.36,0:05:00.75,en - 白色,,0,0,0,,They are actually references of references.
Dialogue: 0,0:04:58.36,0:05:00.75,zh - 黄色,,0,0,0,,它们实际上是引用的引用
Dialogue: 0,0:05:01.55,0:05:05.11,en - 白色,,0,0,0,,So you may find that's a little hard to fully grok.
Dialogue: 0,0:05:01.55,0:05:05.11,zh - 黄色,,0,0,0,,你可能会发现这有点难理解
Dialogue: 0,0:05:05.11,0:05:08.71,en - 白色,,0,0,0,,But it will be OK, because later when we do this assignment called Seam Carving,
Dialogue: 0,0:05:05.11,0:05:08.71,zh - 黄色,,0,0,0,,没事，稍后我们做这个叫 Seam Carving 的作业
Dialogue: 0,0:05:08.71,0:05:09.89,en - 白色,,0,0,0,,you will get better hand.
Dialogue: 0,0:05:08.71,0:05:09.89,zh - 黄色,,0,0,0,,你会掌握得更好
Dialogue: 0,0:05:11.96,0:05:16.66,en - 白色,,0,0,0,,And these are just repeating some points that I said during the earlier demo.
Dialogue: 0,0:05:11.96,0:05:16.66,zh - 黄色,,0,0,0,,这些只是重复了之前提到的一些观点
Dialogue: 0,0:05:17.08,0:05:26.79,en - 白色,,0,0,0,,So this very first line, it creates one box of 64 bits that refers to an array of int arrays-- int array references.
Dialogue: 0,0:05:17.08,0:05:26.79,zh - 黄色,,0,0,0,,第一行创建了一个64位的盒子，指向整型数组引用的数组
Dialogue: 0,0:05:27.87,0:05:29.93,en - 白色,,0,0,0,,See, confounding.
Dialogue: 0,0:05:27.87,0:05:29.93,zh - 黄色,,0,0,0,,看，令人困惑
Dialogue: 0,0:05:30.68,0:05:36.35,en - 白色,,0,0,0,,This next line though, it in this case, creates four additional boxes and each of them is null.
Dialogue: 0,0:05:30.68,0:05:36.35,zh - 黄色,,0,0,0,,下一行创建了4个额外的盒子，每个都是 null
Dialogue: 0,0:05:37.36,0:05:39.17,en - 白色,,0,0,0,,So this is one box, four boxes.
Dialogue: 0,0:05:37.36,0:05:39.17,zh - 黄色,,0,0,0,,这是1个盒子，这是4个盒子
Dialogue: 0,0:05:39.64,0:05:43.87,en - 白色,,0,0,0,,Down here if we look at this line just to pick out what it does total,
Dialogue: 0,0:05:39.64,0:05:43.87,zh - 黄色,,0,0,0,,看看这行做了什么
Dialogue: 0,0:05:43.87,0:05:46.51,en - 白色,,0,0,0,,well, it first creates an array which has three boxes.
Dialogue: 0,0:05:43.87,0:05:46.51,zh - 黄色,,0,0,0,,它首先创建一个有3个盒子的数组
Dialogue: 0,0:05:46.51,0:05:48.49,en - 白色,,0,0,0,,It puts the numbers 1, 2, and 1 in them.
Dialogue: 0,0:05:46.51,0:05:48.49,zh - 黄色,,0,0,0,,将数字1、2和1放入其中
Dialogue: 0,0:05:48.49,0:05:51.10,en - 白色,,0,0,0,,And then it assigns the address to this box.
Dialogue: 0,0:05:48.49,0:05:51.10,zh - 黄色,,0,0,0,,然后将地址分配给这个盒子
Dialogue: 0,0:05:52.54,0:05:55.21,en - 白色,,0,0,0,,And as as all said before, this one makes one total array.
Dialogue: 0,0:05:52.54,0:05:55.21,zh - 黄色,,0,0,0,,正如之前所说，这是个总的数组
Dialogue: 0,0:05:55.21,0:05:56.08,en - 白色,,0,0,0,,This is five arrays.
Dialogue: 0,0:05:55.21,0:05:56.08,zh - 黄色,,0,0,0,,这是5个数组
Dialogue: 0,0:05:56.98,0:06:01.63,en - 白色,,0,0,0,,So just some highlights of terminology that maybe are not that interesting to listen to me say,
Dialogue: 0,0:05:56.98,0:06:01.63,zh - 黄色,,0,0,0,,这只是一些重点术语，也许听我说这些术语并不那么有趣
Dialogue: 0,0:06:01.63,0:06:04.43,en - 白色,,0,0,0,,but you can convince yourself of the truth of these statements.
Dialogue: 0,0:06:01.63,0:06:04.43,zh - 黄色,,0,0,0,,但你可以说服自己相信这些说法的真实性
Dialogue: 0,0:06:05.87,0:06:08.08,en - 白色,,0,0,0,,So now an exercise for you that I'd like you to ponder.
Dialogue: 0,0:06:05.87,0:06:08.08,zh - 黄色,,0,0,0,,现在做一个练习，思考一下
Dialogue: 0,0:06:09.40,0:06:10.62,en - 白色,,0,0,0,,Knowing what we've just said,
Dialogue: 0,0:06:09.40,0:06:10.62,zh - 黄色,,0,0,0,,记住我们刚才说的话
Dialogue: 0,0:06:12.18,0:06:15.78,en - 白色,,0,0,0,,because just watching me do that is probably not going to lead to a great deal of understanding,
Dialogue: 0,0:06:12.18,0:06:15.78,zh - 黄色,,0,0,0,,仅仅看着我这么做可能不会带来太多的理解
Dialogue: 0,0:06:16.21,0:06:19.39,en - 白色,,0,0,0,,I want you to tell me here when I run this code
Dialogue: 0,0:06:16.21,0:06:19.39,zh - 黄色,,0,0,0,,我想让你在我运行这段代码的时候告诉我
Dialogue: 0,0:06:20.51,0:06:22.74,en - 白色,,0,0,0,,and create these other variables,
Dialogue: 0,0:06:20.51,0:06:22.74,zh - 黄色,,0,0,0,,创建这些其他变量
Dialogue: 0,0:06:23.05,0:06:28.03,en - 白色,,0,0,0,,what is going to be the value of x, 0, 0 and w, 0, 0 when this code completes?
Dialogue: 0,0:06:23.05,0:06:28.03,zh - 黄色,,0,0,0,,代码完成时 x[0][0] 和 w[0][0] 的值是多少？
Dialogue: 0,0:06:28.57,0:06:33.32,en - 白色,,0,0,0,,And in this case, what I want to have you do is click on this Answer link if you want the answer.
Dialogue: 0,0:06:28.57,0:06:33.32,zh - 黄色,,0,0,0,,如果你想知道答案，点击这个答案链接
Dialogue: 0,0:06:34.43,0:06:39.37,en - 白色,,0,0,0,,And if you really hate going to a web site, opening the slides, and clicking the link, I put it up top
Dialogue: 0,0:06:34.43,0:06:39.37,zh - 黄色,,0,0,0,,如果你真的讨厌打开幻灯片并点击链接去网站，那么我把它放在上面
Dialogue: 0,0:06:39.15,0:06:42.15,翻译人员专属 - 片尾（左上角）,,0,0,0,, 翻译：@隐秀_（seriouszyx）
Dialogue: 0,0:06:39.37,0:06:42.15,en - 白色,,0,0,0,,so you can type it in manually.
Dialogue: 0,0:06:39.37,0:06:42.15,zh - 黄色,,0,0,0,,这样你就可以手动输入了
