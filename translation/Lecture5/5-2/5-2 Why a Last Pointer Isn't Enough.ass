[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: 5-2 Why a Last Pointer Isnt Enough.mp4
Video File: 5-2 Why a Last Pointer Isnt Enough.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.500000
Scroll Position: 12
Active Line: 22
Video Position: 1210

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: zh - 黄色,微软雅黑,60,&H0080FFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: en - 白色,Yu Gothic UI,45,&H00FFFFFF,&H000000FF,&H55000000,&H63000000,-1,0,0,0,100,100,0,0,1,4,0,2,3,3,16,1
Style: 翻译人员专属 - 左下角,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,1,42,32,42,1
Style: 翻译人员专属 - 片尾（左上角）,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,7,42,32,42,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:03.00,翻译人员专属 - 片尾（左上角）,,0,0,0,, 翻译：@隐秀_（seriouszyx）
Dialogue: 0,0:00:01.08,0:00:03.36,en - 白色,,0,0,0,,Turns out the add and get will be perfectly fast.
Dialogue: 0,0:00:01.08,0:00:03.36,zh - 黄色,,0,0,0,,事实证明添加和获取将非常快
Dialogue: 0,0:00:03.60,0:00:04.61,en - 白色,,0,0,0,,Remove will be slow.
Dialogue: 0,0:00:03.60,0:00:04.61,zh - 黄色,,0,0,0,,删除将会很慢
Dialogue: 0,0:00:05.52,0:00:09.03,en - 白色,,0,0,0,,Now you might say, if you're just kind of casually watching and not thinking very hard,
Dialogue: 0,0:00:05.52,0:00:09.03,zh - 黄色,,0,0,0,,如果你没有很认真地思考，可能会说
Dialogue: 0,0:00:09.08,0:00:09.86,en - 白色,,0,0,0,,how can that be?
Dialogue: 0,0:00:09.08,0:00:09.86,zh - 黄色,,0,0,0,,这怎么可能呢？
Dialogue: 0,0:00:10.13,0:00:14.29,en - 白色,,0,0,0,,We have last here, so we'll just aim our big giant deletion death ray at this thing.
Dialogue: 0,0:00:10.13,0:00:14.29,zh - 黄色,,0,0,0,,我们的 last 就像巨大的死亡射线对准这东西
Dialogue: 0,0:00:14.54,0:00:15.04,en - 白色,,0,0,0,,Shoot it.
Dialogue: 0,0:00:14.54,0:00:15.04,zh - 黄色,,0,0,0,,开火
Dialogue: 0,0:00:15.04,0:00:15.94,en - 白色,,0,0,0,,50 explodes.
Dialogue: 0,0:00:15.04,0:00:15.94,zh - 黄色,,0,0,0,,50就爆炸了
Dialogue: 0,0:00:15.94,0:00:17.01,en - 白色,,0,0,0,,We don't have to ever think about it.
Dialogue: 0,0:00:15.94,0:00:17.01,zh - 黄色,,0,0,0,,根本不用多想
Dialogue: 0,0:00:17.49,0:00:19.02,en - 白色,,0,0,0,,But that's not what removing means. Right?
Dialogue: 0,0:00:17.49,0:00:19.02,zh - 黄色,,0,0,0,,但这不是删除的意思，对吗？
Dialogue: 0,0:00:19.02,0:00:20.00,en - 白色,,0,0,0,,It's not how we delete.
Dialogue: 0,0:00:19.02,0:00:20.00,zh - 黄色,,0,0,0,,不是这样删除的
Dialogue: 0,0:00:20.16,0:00:23.84,en - 白色,,0,0,0,,Deletion, in fact, will be about changing these two pointers in red.
Dialogue: 0,0:00:20.16,0:00:23.84,zh - 黄色,,0,0,0,,实际上，删除是改变这两个红色的指针
Dialogue: 0,0:00:24.45,0:00:27.35,en - 白色,,0,0,0,,So specifically, if we want to delete this node,
Dialogue: 0,0:00:24.45,0:00:27.35,zh - 黄色,,0,0,0,,具体来讲，如果我们想要删除这个节点
Dialogue: 0,0:00:27.35,0:00:29.44,en - 白色,,0,0,0,,it means, first, we need to set this to null.
Dialogue: 0,0:00:27.35,0:00:29.44,zh - 黄色,,0,0,0,,首先，我们需要将这个设置为 null
Dialogue: 0,0:00:31.14,0:00:32.57,en - 白色,,0,0,0,,I guess I'll just leave it null.
Dialogue: 0,0:00:31.14,0:00:32.57,zh - 黄色,,0,0,0,,还是把它留为 null 吧
Dialogue: 0,0:00:33.18,0:00:37.42,en - 白色,,0,0,0,,And I also need to point last at this box here.
Dialogue: 0,0:00:33.18,0:00:37.42,zh - 黄色,,0,0,0,,我还需要 last 指着这个盒子
Dialogue: 0,0:00:38.04,0:00:42.43,en - 白色,,0,0,0,,So, in effect, in order to delete the final item on the list,
Dialogue: 0,0:00:38.04,0:00:42.43,zh - 黄色,,0,0,0,,因此为了删除 List 上的最后一项
Dialogue: 0,0:00:42.65,0:00:45.27,en - 白色,,0,0,0,,we need to somehow know where the second to last item is
Dialogue: 0,0:00:42.65,0:00:45.27,zh - 黄色,,0,0,0,,我们需要以某种方式知道倒数第二项在哪里
Dialogue: 0,0:00:45.42,0:00:49.00,en - 白色,,0,0,0,,because we need to be able to change this and we need to point last at the second to last item.
Dialogue: 0,0:00:45.42,0:00:49.00,zh - 黄色,,0,0,0,,因为我们需要能够改变它，从最后一项指向倒数第二项
Dialogue: 0,0:00:49.56,0:00:52.27,en - 白色,,0,0,0,,So in other words, in order to delete from the end full list,
Dialogue: 0,0:00:49.56,0:00:52.27,zh - 黄色,,0,0,0,,换句话说，为了从 List 末尾删除
Dialogue: 0,0:00:52.48,0:00:53.68,en - 白色,,0,0,0,,even if we have a last pointer,
Dialogue: 0,0:00:52.48,0:00:53.68,zh - 黄色,,0,0,0,,即使我们有 last 指针
Dialogue: 0,0:00:53.70,0:00:56.24,en - 白色,,0,0,0,,we're still going to have to iterate to find the second to last item.
Dialogue: 0,0:00:53.70,0:00:56.24,zh - 黄色,,0,0,0,,仍然需要迭代才能找到倒数第二项
Dialogue: 0,0:00:57.10,0:00:59.04,en - 白色,,0,0,0,,So why can't we just cache the second to last item?
Dialogue: 0,0:00:57.10,0:00:59.04,zh - 黄色,,0,0,0,,那为什么不只缓存倒数第二项呢？
Dialogue: 0,0:00:59.44,0:01:02.24,en - 白色,,0,0,0,,Well, it turns out you can just inductively work your way along and say,
Dialogue: 0,0:00:59.44,0:01:02.24,zh - 黄色,,0,0,0,,事实证明，你可以顺藤摸瓜
Dialogue: 0,0:01:02.48,0:01:05.48,en - 白色,,0,0,0,,well, in that case, we'd actually need to find the third to last thing
Dialogue: 0,0:01:02.48,0:01:05.48,zh - 黄色,,0,0,0,,那样的们实际上需要找到倒数第三项
Dialogue: 0,0:01:05.48,0:01:07.82,en - 白色,,0,0,0,,in order to set the second to last pointer, and so forth.
Dialogue: 0,0:01:05.48,0:01:07.82,zh - 黄色,,0,0,0,,以便设置倒数第二个指针，依此类推
Dialogue: 0,0:01:08.29,0:01:13.44,en - 白色,,0,0,0,,So that approach of just adding a single cached value is not going to do it for us.
Dialogue: 0,0:01:08.29,0:01:13.44,zh - 黄色,,0,0,0,,因此，仅仅添加一个缓存值的方法对我们来说是行不通的
Dialogue: 0,0:01:13.68,0:01:14.11,en - 白色,,0,0,0,,OK.
Dialogue: 0,0:01:13.68,0:01:14.11,zh - 黄色,,0,0,0,,好
Dialogue: 0,0:01:14.59,0:01:17.34,en - 白色,,0,0,0,,So to get from here, this state to the deletion state,
Dialogue: 0,0:01:14.59,0:01:17.34,zh - 黄色,,0,0,0,,所以从这里开始，从这个状态到删除状态
Dialogue: 0,0:01:17.34,0:01:24.33,en - 白色,,0,0,0,,we need more information than we could possibly store just in some little cache up at the top level.
Dialogue: 0,0:01:17.34,0:01:24.33,zh - 黄色,,0,0,0,,我们需要更多的信息，而不是仅仅存储在顶层的某个小缓存中
Dialogue: 0,0:01:25.31,0:01:29.11,en - 白色,,0,0,0,,So what I'd like you to do now is consider what could I do?
Dialogue: 0,0:01:25.31,0:01:29.11,zh - 黄色,,0,0,0,,我想让你们现在考虑一下我能做些什么？
Dialogue: 0,0:01:29.11,0:01:30.28,en - 白色,,0,0,0,,Right, this is a good start.
Dialogue: 0,0:01:29.11,0:01:30.28,zh - 黄色,,0,0,0,,对，这是个好的开始
Dialogue: 0,0:01:30.28,0:01:31.18,en - 白色,,0,0,0,,I'll tell you that.
Dialogue: 0,0:01:30.28,0:01:31.18,zh - 黄色,,0,0,0,,我会告诉你的
Dialogue: 0,0:01:31.72,0:01:34.33,en - 白色,,0,0,0,,But what can we do to the overall structure of the list,
Dialogue: 0,0:01:31.72,0:01:34.33,zh - 黄色,,0,0,0,,我们能对 List 的整体结构做些什么
Dialogue: 0,0:01:34.33,0:01:36.60,en - 白色,,0,0,0,,so that remove last is also fast?
Dialogue: 0,0:01:34.33,0:01:36.60,zh - 黄色,,0,0,0,,让删除最后一项也很快
Dialogue: 0,0:01:37.12,0:01:38.35,en - 白色,,0,0,0,,So think about that a little.
Dialogue: 0,0:01:37.12,0:01:38.35,zh - 黄色,,0,0,0,,稍微想一想这点
Dialogue: 0,0:01:38.35,0:01:41.07,en - 白色,,0,0,0,,You have to do something else other than just adding a pointer up here.
Dialogue: 0,0:01:38.35,0:01:41.07,zh - 黄色,,0,0,0,,你不能只在这添加一个指针
Dialogue: 0,0:01:41.07,0:01:42.41,en - 白色,,0,0,0,,That's not going to get you anywhere.
Dialogue: 0,0:01:41.07,0:01:42.41,zh - 黄色,,0,0,0,,那对你没多少帮助
Dialogue: 0,0:01:42.06,0:01:45.06,翻译人员专属 - 片尾（左上角）,,0,0,0,,翻译：@隐秀_（seriouszyx）
Dialogue: 0,0:01:42.41,0:01:45.06,en - 白色,,0,0,0,,So think about what else you might do.
Dialogue: 0,0:01:42.41,0:01:45.06,zh - 黄色,,0,0,0,,所以想一想还可以做些什么
