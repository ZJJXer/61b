[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: 5-4 Generic Lists.mp4
Video File: 5-4 Generic Lists.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.500000
Scroll Position: 169
Active Line: 180
Video Position: 14660

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: zh - 黄色,微软雅黑,60,&H0080FFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: en - 白色,Yu Gothic UI,45,&H00FFFFFF,&H000000FF,&H55000000,&H63000000,-1,0,0,0,100,100,0,0,1,4,0,2,3,3,16,1
Style: 翻译人员专属 - 左下角,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,1,42,32,42,1
Style: 翻译人员专属 - 片尾（左上角）,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,7,42,32,42,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:03.00,翻译人员专属 - 片尾（左上角）,,0,0,0,, 翻译：@隐秀_（seriouszyx）
Dialogue: 0,0:00:00.75,0:00:02.79,en - 白色,,0,0,0,,Before we move on from linked lists altogether,
Dialogue: 0,0:00:00.75,0:00:02.79,zh - 黄色,,0,0,0,,在我们完全离脱离链表之前
Dialogue: 0,0:00:02.88,0:00:04.86,en - 白色,,0,0,0,,let's discuss an obvious limitation
Dialogue: 0,0:00:02.88,0:00:04.86,zh - 黄色,,0,0,0,,讨论一个明显的限制
Dialogue: 0,0:00:04.86,0:00:06.98,en - 白色,,0,0,0,,that makes our list not so useful in the real world.
Dialogue: 0,0:00:04.86,0:00:06.98,zh - 黄色,,0,0,0,,这个限制使得我们的 List 在现实世界中没多大用
Dialogue: 0,0:00:07.68,0:00:08.79,en - 白色,,0,0,0,,What is that limitation?
Dialogue: 0,0:00:07.68,0:00:08.79,zh - 黄色,,0,0,0,,限制是什么？
Dialogue: 0,0:00:09.42,0:00:12.34,en - 白色,,0,0,0,,Well, let's consider here an SSList using class.
Dialogue: 0,0:00:09.42,0:00:12.34,zh - 黄色,,0,0,0,,考虑这个 SLList 的使用类
Dialogue: 0,0:00:12.87,0:00:14.68,en - 白色,,0,0,0,,It creates an SSList with the number 5
Dialogue: 0,0:00:12.87,0:00:14.68,zh - 黄色,,0,0,0,,它创建一个包含数字5的 SSList
Dialogue: 0,0:00:14.68,0:00:15.87,en - 白色,,0,0,0,,and adds the number 10.
Dialogue: 0,0:00:14.68,0:00:15.87,zh - 黄色,,0,0,0,,并添加数字10
Dialogue: 0,0:00:15.87,0:00:17.61,en - 白色,,0,0,0,,And it will all work beautifully and wonderfully.
Dialogue: 0,0:00:15.87,0:00:17.61,zh - 黄色,,0,0,0,,一切都会工作得漂亮又奇妙
Dialogue: 0,0:00:18.39,0:00:20.84,en - 白色,,0,0,0,,But suppose we wanted to create not a list of integers,
Dialogue: 0,0:00:18.39,0:00:20.84,zh - 黄色,,0,0,0,,但是假设我们不想创建整数链表
Dialogue: 0,0:00:21.13,0:00:22.50,en - 白色,,0,0,0,,but a list of, say, strings.
Dialogue: 0,0:00:21.13,0:00:22.50,zh - 黄色,,0,0,0,,而是字符串链表
Dialogue: 0,0:00:22.89,0:00:27.22,en - 白色,,0,0,0,,So I might try and start off with bone, then add thugs.
Dialogue: 0,0:00:22.89,0:00:27.22,zh - 黄色,,0,0,0,,也许我会初始化为“bone”，添加“thugs”
Dialogue: 0,0:00:27.95,0:00:30.85,en - 白色,,0,0,0,,And if I try running this, well, then I run into an issue.
Dialogue: 0,0:00:27.95,0:00:30.85,zh - 黄色,,0,0,0,,如果我试着运行它，就会遇到一个问题
Dialogue: 0,0:00:31.26,0:00:32.89,en - 白色,,0,0,0,,String cannot be converted to int.
Dialogue: 0,0:00:31.26,0:00:32.89,zh - 黄色,,0,0,0,,String 无法转换为 int
Dialogue: 0,0:00:33.67,0:00:35.90,en - 白色,,0,0,0,,And so the fundamental issue we run into
Dialogue: 0,0:00:33.67,0:00:35.90,zh - 黄色,,0,0,0,,我们遇到的根本问题是
Dialogue: 0,0:00:36.33,0:00:40.62,en - 白色,,0,0,0,,is that an SSList has int nodes, and int nodes have int items.
Dialogue: 0,0:00:36.33,0:00:40.62,zh - 黄色,,0,0,0,,SSList有 IntNode，IntNode 有 int 项
Dialogue: 0,0:00:40.99,0:00:45.00,en - 白色,,0,0,0,,And therefore if we tried to create an SSList using a string
Dialogue: 0,0:00:40.99,0:00:45.00,zh - 黄色,,0,0,0,,因此，如果我们尝试使用字符串创建 SSList
Dialogue: 0,0:00:45.00,0:00:48.23,en - 白色,,0,0,0,,or how we try to add to such an SSList using a string,
Dialogue: 0,0:00:45.00,0:00:48.23,zh - 黄色,,0,0,0,,或者我们尝试将字符串添加到这样的 SSList 中
Dialogue: 0,0:00:48.52,0:00:49.43,en - 白色,,0,0,0,,we will get an error.
Dialogue: 0,0:00:48.52,0:00:49.43,zh - 黄色,,0,0,0,,我们会得到错误
Dialogue: 0,0:00:49.59,0:00:50.65,en - 白色,,0,0,0,,You cannot do this.
Dialogue: 0,0:00:49.59,0:00:50.65,zh - 黄色,,0,0,0,,你不能这么做
Dialogue: 0,0:00:50.76,0:00:53.29,en - 白色,,0,0,0,,You cannot take strings and convert them into integers.
Dialogue: 0,0:00:50.76,0:00:53.29,zh - 黄色,,0,0,0,,不能将字符串转换为整数
Dialogue: 0,0:00:53.49,0:00:54.49,en - 白色,,0,0,0,,That's the ultimate trouble.
Dialogue: 0,0:00:53.49,0:00:54.49,zh - 黄色,,0,0,0,,这才是最大的麻烦
Dialogue: 0,0:00:55.53,0:00:56.45,en - 白色,,0,0,0,,So how do we fix that?
Dialogue: 0,0:00:55.53,0:00:56.45,zh - 黄色,,0,0,0,,怎么解决呢？
Dialogue: 0,0:00:57.27,0:00:59.07,en - 白色,,0,0,0,,Well, the lamest possible way we can fix it
Dialogue: 0,0:00:57.27,0:00:59.07,zh - 黄色,,0,0,0,,能解决的最差办法是
Dialogue: 0,0:00:59.07,0:01:01.44,en - 白色,,0,0,0,,is we could make an entirely new SSList class,
Dialogue: 0,0:00:59.07,0:01:01.44,zh - 黄色,,0,0,0,,我们可以创建一个全新的 SSList 类
Dialogue: 0,0:01:01.44,0:01:02.54,en - 白色,,0,0,0,,like string SSList
Dialogue: 0,0:01:01.44,0:01:02.54,zh - 黄色,,0,0,0,,比如字符串 SSList
Dialogue: 0,0:01:02.87,0:01:05.58,en - 白色,,0,0,0,,and then do a Find and Replace for int everywhere, and oh boy,
Dialogue: 0,0:01:02.87,0:01:05.58,zh - 黄色,,0,0,0,,然后对各处的 int 进行查找和替换，天哪
Dialogue: 0,0:01:06.00,0:01:08.16,en - 白色,,0,0,0,,and that would be a terrible idea, obviously.
Dialogue: 0,0:01:06.00,0:01:08.16,zh - 黄色,,0,0,0,,显然这将是一个糟糕的想法
Dialogue: 0,0:01:08.97,0:01:11.56,en - 白色,,0,0,0,,So the current approach in modern Java
Dialogue: 0,0:01:08.97,0:01:11.56,zh - 黄色,,0,0,0,,目前现代 Java 的做法是
Dialogue: 0,0:01:11.94,0:01:15.72,en - 白色,,0,0,0,,is to make SSList a parametrized--
Dialogue: 0,0:01:11.94,0:01:15.72,zh - 黄色,,0,0,0,,让 SSList 参数化
Dialogue: 0,0:01:15.93,0:01:19.33,en - 白色,,0,0,0,,well, we can parametrize the type that SSList will take.
Dialogue: 0,0:01:15.93,0:01:19.33,zh - 黄色,,0,0,0,,我们可以参数化 SSList 将采用的类型
Dialogue: 0,0:01:20.07,0:01:21.31,en - 白色,,0,0,0,,What does that possibly mean?
Dialogue: 0,0:01:20.07,0:01:21.31,zh - 黄色,,0,0,0,,这是什么意思？
Dialogue: 0,0:01:21.83,0:01:28.85,en - 白色,,0,0,0,,OK, so what I'm going to do is I'm going to add new little angled braces here right after the name SSList.
Dialogue: 0,0:01:21.83,0:01:28.85,zh - 黄色,,0,0,0,,我将在 SLList 后面添加小尖括号
Dialogue: 0,0:01:29.04,0:01:33.88,en - 白色,,0,0,0,,And here I'm going to pick any old string, something arbitrary like-- LochNess.
Dialogue: 0,0:01:29.04,0:01:33.88,zh - 黄色,,0,0,0,,在这里我将挑选老旧的字符串，比如 LochNess
Dialogue: 0,0:01:34.66,0:01:40.10,en - 白色,,0,0,0,,And that's just going to act as a placeholder for a type that is not decided at the time SSList was created.
Dialogue: 0,0:01:34.66,0:01:40.10,zh - 黄色,,0,0,0,,这将充当在创建 SSList 时未决定类型的占位符
Dialogue: 0,0:01:40.92,0:01:43.89,en - 白色,,0,0,0,,So instead of an int item, we're going to have a LochNess.
Dialogue: 0,0:01:40.92,0:01:43.89,zh - 黄色,,0,0,0,,因此我们将使用 LochNess ，而不是 int
Dialogue: 0,0:01:44.13,0:01:46.79,en - 白色,,0,0,0,,Instead of creating a IntNode, we're going to say public IntNode.
Dialogue: 0,0:01:44.13,0:01:46.79,zh - 黄色,,0,0,0,,不再创建 IntNode，而是...
Dialogue: 0,0:01:46.79,0:01:48.56,en - 白色,,0,0,0,,And we need to provide a LochNess.
Dialogue: 0,0:01:46.79,0:01:48.56,zh - 黄色,,0,0,0,,提供一个 LochNess
Dialogue: 0,0:01:50.36,0:01:52.17,en - 白色,,0,0,0,,IntNode is probably not a great name,
Dialogue: 0,0:01:50.36,0:01:52.17,zh - 黄色,,0,0,0,,IntNode 可能不是一个好名字
Dialogue: 0,0:01:52.17,0:01:53.52,en - 白色,,0,0,0,,since it's no longer IntNode.
Dialogue: 0,0:01:52.17,0:01:53.52,zh - 黄色,,0,0,0,,因为它不再是 IntNode
Dialogue: 0,0:01:53.52,0:01:55.60,en - 白色,,0,0,0,,So let's do a Find and Replace on that too.
Dialogue: 0,0:01:53.52,0:01:55.60,zh - 黄色,,0,0,0,,因此对其进行查找和替换
Dialogue: 0,0:01:56.78,0:01:59.90,en - 白色,,0,0,0,,No IntNode, we'll just call this thing StuffNode.
Dialogue: 0,0:01:56.78,0:01:59.90,zh - 黄色,,0,0,0,,没有 IntNode，我们就称它为 StuffNode
Dialogue: 0,0:02:01.64,0:02:03.78,en - 白色,,0,0,0,,just to emphasize it still has stuff in it.
Dialogue: 0,0:02:01.64,0:02:03.78,zh - 黄色,,0,0,0,,只是为了强调它还有东西在里面
Dialogue: 0,0:02:04.86,0:02:08.44,en - 白色,,0,0,0,,And then I'm going to keep working my way through.
Dialogue: 0,0:02:04.86,0:02:08.44,zh - 黄色,,0,0,0,,然后我会继续努力完成目标
Dialogue: 0,0:02:08.70,0:02:09.94,en - 白色,,0,0,0,,So when we create an SSList list now
Dialogue: 0,0:02:08.70,0:02:09.94,zh - 黄色,,0,0,0,,当我们现在创建 SSList 时
Dialogue: 0,0:02:09.94,0:02:12.02,en - 白色,,0,0,0,,I'll take LochNesses instead of ints.
Dialogue: 0,0:02:09.94,0:02:12.02,zh - 黄色,,0,0,0,,使用 LochNess 而不是 int
Dialogue: 0,0:02:12.33,0:02:13.78,en - 白色,,0,0,0,,We add LochNesses.
Dialogue: 0,0:02:12.33,0:02:13.78,zh - 黄色,,0,0,0,,添加 LochNess
Dialogue: 0,0:02:13.96,0:02:15.56,en - 白色,,0,0,0,,We return LochNesses.
Dialogue: 0,0:02:13.96,0:02:15.56,zh - 黄色,,0,0,0,,返回 LochNess
Dialogue: 0,0:02:15.56,0:02:16.53,en - 白色,,0,0,0,,We add LochNesses.
Dialogue: 0,0:02:15.56,0:02:16.53,zh - 黄色,,0,0,0,,添加 LochNess
Dialogue: 0,0:02:17.19,0:02:18.70,en - 白色,,0,0,0,,And at that point we're all done.
Dialogue: 0,0:02:17.19,0:02:18.70,zh - 黄色,,0,0,0,,我们都做完了
Dialogue: 0,0:02:19.62,0:02:25.41,en - 白色,,0,0,0,,So the important part, the main thing I changed other than just the name of IntNode,
Dialogue: 0,0:02:19.62,0:02:25.41,zh - 黄色,,0,0,0,,重要的是，除了更改 IntNode 的名称之外
Dialogue: 0,0:02:25.60,0:02:27.19,en - 白色,,0,0,0,,is that I added LochNess here.
Dialogue: 0,0:02:25.60,0:02:27.19,zh - 黄色,,0,0,0,,我在这里添加了 LochNess
Dialogue: 0,0:02:27.99,0:02:28.95,en - 白色,,0,0,0,,This will compile.
Dialogue: 0,0:02:27.99,0:02:28.95,zh - 黄色,,0,0,0,,进行编译
Dialogue: 0,0:02:28.95,0:02:30.99,en - 白色,,0,0,0,,And now an SSList, and then it won't run,
Dialogue: 0,0:02:28.95,0:02:30.99,zh - 黄色,,0,0,0,,现在 SLList 不会运行了
Dialogue: 0,0:02:30.99,0:02:32.11,en - 白色,,0,0,0,,because there's no main method.
Dialogue: 0,0:02:30.99,0:02:32.11,zh - 黄色,,0,0,0,,因为没有 main 方法
Dialogue: 0,0:02:32.33,0:02:33.36,en - 白色,,0,0,0,,But it compiles.
Dialogue: 0,0:02:32.33,0:02:33.36,zh - 黄色,,0,0,0,,但它会编译
Dialogue: 0,0:02:33.36,0:02:34.80,en - 白色,,0,0,0,,And it should work fine.
Dialogue: 0,0:02:33.36,0:02:34.80,zh - 黄色,,0,0,0,,而且应该编译得很好
Dialogue: 0,0:02:35.34,0:02:37.13,en - 白色,,0,0,0,,How do we actually use one of these things?
Dialogue: 0,0:02:35.34,0:02:37.13,zh - 黄色,,0,0,0,,我们如何在实际中使用呢？
Dialogue: 0,0:02:37.80,0:02:39.92,en - 白色,,0,0,0,,Now if we wanted to make an SSList,
Dialogue: 0,0:02:37.80,0:02:39.92,zh - 黄色,,0,0,0,,现在如果我们想做一个 SSList
Dialogue: 0,0:02:40.38,0:02:45.53,en - 白色,,0,0,0,,we're going to now need to specify a type when we create an SSList.
Dialogue: 0,0:02:40.38,0:02:45.53,zh - 黄色,,0,0,0,,需要在创建 SSList 时指定一个类型
Dialogue: 0,0:02:45.78,0:02:47.55,en - 白色,,0,0,0,,And we'll do it with the angled braces.
Dialogue: 0,0:02:45.78,0:02:47.55,zh - 黄色,,0,0,0,,使用尖角括号
Dialogue: 0,0:02:47.55,0:02:51.04,en - 白色,,0,0,0,,And so to do that, I'll say I want an SSList of strings.
Dialogue: 0,0:02:47.55,0:02:51.04,zh - 黄色,,0,0,0,,要做到这一点，需要 String 类型的 SLList
Dialogue: 0,0:02:52.67,0:02:53.91,en - 白色,,0,0,0,,So here we go.
Dialogue: 0,0:02:52.67,0:02:53.91,zh - 黄色,,0,0,0,,我们开始吧
Dialogue: 0,0:02:53.91,0:02:59.83,en - 白色,,0,0,0,,We say, I would like to declare an SSList of string variable and instantiate an SSList of strings.
Dialogue: 0,0:02:53.91,0:02:59.83,zh - 黄色,,0,0,0,,声明一个字符串的 SSList 并实例化一个字符串的 SSList
Dialogue: 0,0:03:00.28,0:03:01.91,en - 白色,,0,0,0,,And now when we try running this,
Dialogue: 0,0:03:00.28,0:03:01.91,zh - 黄色,,0,0,0,,现在我们试着运行
Dialogue: 0,0:03:01.91,0:03:03.00,en - 白色,,0,0,0,,everything should work fine.
Dialogue: 0,0:03:01.91,0:03:03.00,zh - 黄色,,0,0,0,,一切都应该运行得很好
Dialogue: 0,0:03:03.29,0:03:04.00,en - 白色,,0,0,0,,So there it went.
Dialogue: 0,0:03:03.29,0:03:04.00,zh - 黄色,,0,0,0,,成功了
Dialogue: 0,0:03:04.00,0:03:04.76,en - 白色,,0,0,0,,It worked.
Dialogue: 0,0:03:04.00,0:03:04.76,zh - 黄色,,0,0,0,,真灵
Dialogue: 0,0:03:06.63,0:03:10.64,en - 白色,,0,0,0,,And so what's going on here is that whenever we instantiate an SSList,
Dialogue: 0,0:03:06.63,0:03:10.64,zh - 黄色,,0,0,0,,这里发生的事情是，每当我们实例化 SSList 时
Dialogue: 0,0:03:10.86,0:03:17.53,en - 白色,,0,0,0,,this string right here will get substituted everywhere in for LochNess.
Dialogue: 0,0:03:10.86,0:03:17.53,zh - 黄色,,0,0,0,,这里的 String 将被各处的 LochNess 替换
Dialogue: 0,0:03:17.80,0:03:21.40,en - 白色,,0,0,0,,So it's basically a type variable or a type parameter.
Dialogue: 0,0:03:17.80,0:03:21.40,zh - 黄色,,0,0,0,,它基本上是一个类型变量或类型参数
Dialogue: 0,0:03:22.25,0:03:23.90,en - 白色,,0,0,0,,And so it can get a little confusing,
Dialogue: 0,0:03:22.25,0:03:23.90,zh - 黄色,,0,0,0,,这可能会让人有点困惑
Dialogue: 0,0:03:23.90,0:03:25.78,en - 白色,,0,0,0,,and we're not going to talk a lot about it right now.
Dialogue: 0,0:03:23.90,0:03:25.78,zh - 黄色,,0,0,0,,我们现在不会谈论太多
Dialogue: 0,0:03:25.94,0:03:27.44,en - 白色,,0,0,0,,I just want you to know the basics.
Dialogue: 0,0:03:25.94,0:03:27.44,zh - 黄色,,0,0,0,,只想让你知道最基本的事情
Dialogue: 0,0:03:28.48,0:03:35.30,en - 白色,,0,0,0,,Now in even more modern Java, it is no longer necessary to specify the type on the instantiation side.
Dialogue: 0,0:03:28.48,0:03:35.30,zh - 黄色,,0,0,0,,在更现代的 Java 中，不再需要在实例化方面指定类型
Dialogue: 0,0:03:35.30,0:03:36.35,en - 白色,,0,0,0,,So I'm going to delete that.
Dialogue: 0,0:03:35.30,0:03:36.35,zh - 黄色,,0,0,0,,所以我要把它删除
Dialogue: 0,0:03:36.80,0:03:38.11,en - 白色,,0,0,0,,And this too will work.
Dialogue: 0,0:03:36.80,0:03:38.11,zh - 黄色,,0,0,0,,这也会奏效
Dialogue: 0,0:03:39.22,0:03:41.95,en - 白色,,0,0,0,,So let's just summarize there, and later in the course
Dialogue: 0,0:03:39.22,0:03:41.95,zh - 黄色,,0,0,0,,我们在这里总结一下，以后课程中也是
Dialogue: 0,0:03:41.95,0:03:44.40,en - 白色,,0,0,0,,we're going to dig a lot more deeply into this issue.
Dialogue: 0,0:03:41.95,0:03:44.40,zh - 黄色,,0,0,0,,我们将更深入地挖掘这个问题
Dialogue: 0,0:03:45.40,0:03:47.71,en - 白色,,0,0,0,,But to summarize what we've got here,
Dialogue: 0,0:03:45.40,0:03:47.71,zh - 黄色,,0,0,0,,但先总结一下
Dialogue: 0,0:03:47.98,0:03:51.22,en - 白色,,0,0,0,,is we can defer type selection until later,
Dialogue: 0,0:03:47.98,0:03:51.22,zh - 黄色,,0,0,0,,我们可以将推迟类型选择
Dialogue: 0,0:03:51.22,0:03:54.36,en - 白色,,0,0,0,,until we've declared a variable or until we've instantiated a variable.
Dialogue: 0,0:03:51.22,0:03:54.36,zh - 黄色,,0,0,0,,直到我们声明了一个变量或实例化了一个变量
Dialogue: 0,0:03:54.60,0:03:57.52,en - 白色,,0,0,0,,And to do that we pick any arbitrary string.
Dialogue: 0,0:03:54.60,0:03:57.52,zh - 黄色,,0,0,0,,要做到这一点，我们挑选任意字符串
Dialogue: 0,0:03:57.52,0:03:59.08,en - 白色,,0,0,0,,And in the class that we're creating,
Dialogue: 0,0:03:57.52,0:03:59.08,zh - 黄色,,0,0,0,,在我们创建的类中
Dialogue: 0,0:03:59.08,0:04:00.52,en - 白色,,0,0,0,,we just put it right after the name.
Dialogue: 0,0:03:59.08,0:04:00.52,zh - 黄色,,0,0,0,,只是把它放在名字的后面
Dialogue: 0,0:04:00.99,0:04:02.05,en - 白色,,0,0,0,,And then when we want to use it,
Dialogue: 0,0:04:00.99,0:04:02.05,zh - 黄色,,0,0,0,,想要使用它的时候
Dialogue: 0,0:04:02.32,0:04:08.08,en - 白色,,0,0,0,,we make sure that we specify the type we want  when we're declaring, and optionally when we're instantiating.
Dialogue: 0,0:04:02.32,0:04:08.08,zh - 黄色,,0,0,0,,我们要确保在声明或实例化时指定想要的类型
Dialogue: 0,0:04:09.04,0:04:11.96,en - 白色,,0,0,0,,So again, we'll go into this in so much more detail.
Dialogue: 0,0:04:09.04,0:04:11.96,zh - 黄色,,0,0,0,,再说一遍，我们会更详细地讨论
Dialogue: 0,0:04:11.96,0:04:14.18,en - 白色,,0,0,0,,There's a lot of little details that can be confusing.
Dialogue: 0,0:04:11.96,0:04:14.18,zh - 黄色,,0,0,0,,有很多小细节可能会让人感到困惑
Dialogue: 0,0:04:14.39,0:04:16.80,en - 白色,,0,0,0,,But these are the rules of thumb you'll need for project 1,
Dialogue: 0,0:04:14.39,0:04:16.80,zh - 黄色,,0,0,0,,但这些是你在项目一中需要的经验法则
Dialogue: 0,0:04:16.80,0:04:18.47,en - 白色,,0,0,0,,where you're going to build a generic list.
Dialogue: 0,0:04:16.80,0:04:18.47,zh - 黄色,,0,0,0,,你将会构建一个泛型链表
Dialogue: 0,0:04:19.18,0:04:21.94,en - 白色,,0,0,0,,So in the Java file where you implement your data structure,
Dialogue: 0,0:04:19.18,0:04:21.94,zh - 黄色,,0,0,0,,因此在你实现数据结构的 Java 文件中
Dialogue: 0,0:04:21.94,0:04:24.16,en - 白色,,0,0,0,,this side where you're building the actual thing,
Dialogue: 0,0:04:21.94,0:04:24.16,zh - 黄色,,0,0,0,,当你构建实际的东西
Dialogue: 0,0:04:24.16,0:04:28.38,en - 白色,,0,0,0,,you'll specify your generic type only once at the very top of the file, right there, BleepBlorp.
Dialogue: 0,0:04:24.16,0:04:28.38,zh - 黄色,,0,0,0,,只需在文件的顶部指定一次你的泛型类型，BleepBlorp
Dialogue: 0,0:04:29.50,0:04:32.37,en - 白色,,0,0,0,,And it's specified inside of these angled braces.
Dialogue: 0,0:04:29.50,0:04:32.37,zh - 黄色,,0,0,0,,它在这些尖括号里指定
Dialogue: 0,0:04:32.95,0:04:35.52,en - 白色,,0,0,0,,You can use it elsewhere, but you will only specify it once.
Dialogue: 0,0:04:32.95,0:04:35.52,zh - 黄色,,0,0,0,,你可以在其他地方使用，但只需指定一次
Dialogue: 0,0:04:36.49,0:04:39.46,en - 白色,,0,0,0,,And then in Java files that use your data structure,
Dialogue: 0,0:04:36.49,0:04:39.46,zh - 黄色,,0,0,0,,然后在你使用数据结构的 Java 文件中
Dialogue: 0,0:04:39.46,0:04:42.32,en - 白色,,0,0,0,,you'll specify the desired type just once.
Dialogue: 0,0:04:39.46,0:04:42.32,zh - 黄色,,0,0,0,,你只需指定一次所需类型
Dialogue: 0,0:04:42.55,0:04:44.64,en - 白色,,0,0,0,,You'll do it whenever you declare the variable,
Dialogue: 0,0:04:42.55,0:04:44.64,zh - 黄色,,0,0,0,,你可以在声明变量时执行
Dialogue: 0,0:04:45.07,0:04:47.80,en - 白色,,0,0,0,,and then use the empty diamond operator during instantiation.
Dialogue: 0,0:04:45.07,0:04:47.80,zh - 黄色,,0,0,0,,然后在实例化期间使用空的菱形运算符
Dialogue: 0,0:04:47.98,0:04:49.39,en - 白色,,0,0,0,,I mean you can also write out doubles.
Dialogue: 0,0:04:47.98,0:04:49.39,zh - 黄色,,0,0,0,,你也可以写两次
Dialogue: 0,0:04:49.39,0:04:50.72,en - 白色,,0,0,0,,You could technically use it twice.
Dialogue: 0,0:04:49.39,0:04:50.72,zh - 黄色,,0,0,0,,从技术上讲可以写两次
Dialogue: 0,0:04:51.01,0:04:54.76,en - 白色,,0,0,0,,But this will make your code look more like what you're likely to see in the real world.
Dialogue: 0,0:04:51.01,0:04:54.76,zh - 黄色,,0,0,0,,但是这样会使你的代码更接近于实际
Dialogue: 0,0:04:55.51,0:04:58.72,en - 白色,,0,0,0,,And when you're actually declaring or instantiating your data structure,
Dialogue: 0,0:04:55.51,0:04:58.72,zh - 黄色,,0,0,0,,而当你实际声明或实例化你的数据结构时
Dialogue: 0,0:04:58.87,0:05:00.91,en - 白色,,0,0,0,,whenever you're putting something inside of these braces,
Dialogue: 0,0:04:58.87,0:05:00.91,zh - 黄色,,0,0,0,,每次你把东西放进括号
Dialogue: 0,0:05:00.91,0:05:03.95,en - 白色,,0,0,0,,you want to make sure that you use capital I integer,
Dialogue: 0,0:05:00.91,0:05:03.95,zh - 黄色,,0,0,0,,要确保使用大写 I 的 Integer
Dialogue: 0,0:05:03.95,0:05:05.91,en - 白色,,0,0,0,,capital D double, and so forth.
Dialogue: 0,0:05:03.95,0:05:05.91,zh - 黄色,,0,0,0,,大写 D 的 Double，以此类推
Dialogue: 0,0:05:06.04,0:05:09.72,en - 白色,,0,0,0,,So you use the reference type corresponding to each of the primitive types.
Dialogue: 0,0:05:06.04,0:05:09.72,zh - 黄色,,0,0,0,,你要使用与每个原始类型相对应的引用类型
Dialogue: 0,0:05:10.45,0:05:13.57,en - 白色,,0,0,0,,So that will give you as much as you need on project 1.
Dialogue: 0,0:05:10.45,0:05:13.57,zh - 黄色,,0,0,0,,这些是你在项目一中所需的
Dialogue: 0,0:05:14.02,0:05:16.00,en - 白色,,0,0,0,,And they'll be a couple of little tiny gotchas
Dialogue: 0,0:05:14.02,0:05:16.00,zh - 黄色,,0,0,0,,它们会有几个小问题
Dialogue: 0,0:05:16.00,0:05:18.66,en - 白色,,0,0,0,,that will be mentioned in the project 1 FAQ.
Dialogue: 0,0:05:16.00,0:05:18.66,zh - 黄色,,0,0,0,,将在项目一的 FAQ 中提到
Dialogue: 0,0:05:18.97,0:05:22.91,en - 白色,,0,0,0,,And we'll get into generics more somewhat later.
Dialogue: 0,0:05:18.97,0:05:22.91,zh - 黄色,,0,0,0,,稍后我们会更深入地讨论泛型
Dialogue: 0,0:05:19.91,0:05:22.91,翻译人员专属 - 片尾（左上角）,,0,0,0,, 翻译：@隐秀_（seriouszyx）
