[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: 5-1 Summary of SLLists So Far.mp4
Video File: 5-1 Summary of SLLists So Far.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.375000
Scroll Position: 81
Active Line: 82
Video Position: 7064

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: zh - 黄色,微软雅黑,60,&H0080FFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: en - 白色,Yu Gothic UI,45,&H00FFFFFF,&H000000FF,&H55000000,&H63000000,-1,0,0,0,100,100,0,0,1,4,0,2,3,3,16,1
Style: 翻译人员专属 - 左下角,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,1,42,32,42,1
Style: 翻译人员专属 - 片尾（左上角）,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,7,42,32,42,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:03.00,翻译人员专属 - 片尾（左上角）,,0,0,0,,翻译：@隐秀_（seriouszyx）
Dialogue: 0,0:00:00.50,0:00:03.08,en - 白色,,0,0,0,,Two lectures ago, we built the IntList.
Dialogue: 0,0:00:00.50,0:00:03.08,zh - 黄色,,0,0,0,,前两节课我们创建了 IntList
Dialogue: 0,0:00:03.33,0:00:06.24,en - 白色,,0,0,0,,It was a really beautiful, recursive data structure,
Dialogue: 0,0:00:03.33,0:00:06.24,zh - 黄色,,0,0,0,,这是一个非常漂亮的递归数据结构
Dialogue: 0,0:00:06.24,0:00:06.96,en - 白色,,0,0,0,,very pure.
Dialogue: 0,0:00:06.24,0:00:06.96,zh - 黄色,,0,0,0,,非常纯粹
Dialogue: 0,0:00:07.35,0:00:09.55,en - 白色,,0,0,0,,And it allows us to store any amount of information
Dialogue: 0,0:00:07.35,0:00:09.55,zh - 黄色,,0,0,0,,它允许我们存储任意数量的信息
Dialogue: 0,0:00:09.93,0:00:12.56,en - 白色,,0,0,0,,so long as we're willing to keep adding nodes at the end
Dialogue: 0,0:00:09.93,0:00:12.56,zh - 黄色,,0,0,0,,只要我们愿意在末尾不断增加节点
Dialogue: 0,0:00:12.56,0:00:14.21,en - 白色,,0,0,0,,and our computer doesn't run out of memory.
Dialogue: 0,0:00:12.56,0:00:14.21,zh - 黄色,,0,0,0,,并且我们的电脑不会内存不足
Dialogue: 0,0:00:15.07,0:00:19.26,en - 白色,,0,0,0,,So while they're powerful, they have the issue that they're a little awkward to work with.
Dialogue: 0,0:00:15.07,0:00:19.26,zh - 黄色,,0,0,0,,虽然它们很强大，但有一个难以处理的问题
Dialogue: 0,0:00:19.65,0:00:21.25,en - 白色,,0,0,0,,If you want to add to the beginning or the end,
Dialogue: 0,0:00:19.65,0:00:21.25,zh - 黄色,,0,0,0,,如果你想在开头或结尾添加
Dialogue: 0,0:00:21.26,0:00:23.04,en - 白色,,0,0,0,,you have to do direct pointer manipulation.
Dialogue: 0,0:00:21.26,0:00:23.04,zh - 黄色,,0,0,0,,就必须进行直接指针操作
Dialogue: 0,0:00:23.71,0:00:25.95,en - 白色,,0,0,0,,And so what we showed in the previous lecture
Dialogue: 0,0:00:23.71,0:00:25.95,zh - 黄色,,0,0,0,,我们在上一节课中所展示的
Dialogue: 0,0:00:25.95,0:00:29.96,en - 白色,,0,0,0,,was how to add a layer of bureaucracy and produce the SLList,
Dialogue: 0,0:00:25.95,0:00:29.96,zh - 黄色,,0,0,0,,就是如何增加一层官僚主义，产生了 SLList
Dialogue: 0,0:00:30.31,0:00:33.44,en - 白色,,0,0,0,,where now we have a middleman that we go to manipulate the list.
Dialogue: 0,0:00:30.31,0:00:33.44,zh - 黄色,,0,0,0,,现在我们有一个中间人去操纵 List
Dialogue: 0,0:00:34.15,0:00:36.33,en - 白色,,0,0,0,,So, for example, suppose I want to add to the front of the list.
Dialogue: 0,0:00:34.15,0:00:36.33,zh - 黄色,,0,0,0,,例如，假设我想要添加到 List 的前面
Dialogue: 0,0:00:36.63,0:00:39.66,en - 白色,,0,0,0,,I go to the middle man, and I say, hey, please add first.
Dialogue: 0,0:00:36.63,0:00:39.66,zh - 黄色,,0,0,0,,我去找中间人说：“嘿，请加到前面”
Dialogue: 0,0:00:39.93,0:00:45.22,en - 白色,,0,0,0,,And then maybe what she'll do is well, whatever magic stuff the SLList does.
Dialogue: 0,0:00:39.93,0:00:45.22,zh - 黄色,,0,0,0,,也许她会做的很好，不管 SLList 做什么神奇的东西
Dialogue: 0,0:00:45.57,0:00:48.03,en - 白色,,0,0,0,,We don't need to care about it as the user of an SLList.
Dialogue: 0,0:00:45.57,0:00:48.03,zh - 黄色,,0,0,0,,作为 SLList 的用户，我们不需要关心它
Dialogue: 0,0:00:48.27,0:00:50.81,en - 白色,,0,0,0,,We simply call the methods of the SLList class.
Dialogue: 0,0:00:48.27,0:00:50.81,zh - 黄色,,0,0,0,,只需调用 SLList 类的方法
Dialogue: 0,0:00:51.60,0:00:53.33,en - 白色,,0,0,0,,So we enumerated a number of improvements.
Dialogue: 0,0:00:51.60,0:00:53.33,zh - 黄色,,0,0,0,,然后我们列举了一些改进措施
Dialogue: 0,0:00:53.64,0:00:55.23,en - 白色,,0,0,0,,And now that brings us to this moment,
Dialogue: 0,0:00:53.64,0:00:55.23,zh - 黄色,,0,0,0,,把我们带到了这个时刻
Dialogue: 0,0:00:55.23,0:00:57.37,en - 白色,,0,0,0,,where we're going to improve the SLList yet more.
Dialogue: 0,0:00:55.23,0:00:57.37,zh - 黄色,,0,0,0,,我们将进一步改进 SLList
Dialogue: 0,0:00:58.06,0:00:59.91,en - 白色,,0,0,0,,So there's some obvious limitations to the SLList,
Dialogue: 0,0:00:58.06,0:00:59.91,zh - 黄色,,0,0,0,,SLList 有一些明显的限制
Dialogue: 0,0:00:59.91,0:01:01.68,en - 白色,,0,0,0,,like the version we have right now,
Dialogue: 0,0:00:59.91,0:01:01.68,zh - 黄色,,0,0,0,,就像我们现在的版本
Dialogue: 0,0:01:01.68,0:01:03.09,en - 白色,,0,0,0,,you cannot add to the middle.
Dialogue: 0,0:01:01.68,0:01:03.09,zh - 黄色,,0,0,0,,你不能添加到中间
Dialogue: 0,0:01:03.09,0:01:04.88,en - 白色,,0,0,0,,And we could add those features,
Dialogue: 0,0:01:03.09,0:01:04.88,zh - 黄色,,0,0,0,,我们可以添加这些功能
Dialogue: 0,0:01:05.20,0:01:07.86,en - 白色,,0,0,0,,but there's actually a more fundamental issue that I'd like to tackle.
Dialogue: 0,0:01:05.20,0:01:07.86,zh - 黄色,,0,0,0,,但实际上有一个更根本的问题，我想解决
Dialogue: 0,0:01:08.31,0:01:11.59,en - 白色,,0,0,0,,And that is the fact that adding to the back is slow.
Dialogue: 0,0:01:08.31,0:01:11.59,zh - 黄色,,0,0,0,,添加到末尾真的很慢
Dialogue: 0,0:01:12.57,0:01:15.36,en - 白色,,0,0,0,,So if we think about how we add to the end of an SLList,
Dialogue: 0,0:01:12.57,0:01:15.36,zh - 黄色,,0,0,0,,考虑一下如何添加到 SLList 的末尾
Dialogue: 0,0:01:15.78,0:01:18.15,en - 白色,,0,0,0,,inside under the hood what a SLList does
Dialogue: 0,0:01:15.78,0:01:18.15,zh - 黄色,,0,0,0,,SLList 在内部所做的
Dialogue: 0,0:01:18.42,0:01:21.69,en - 白色,,0,0,0,,is it iterates through all of the items
Dialogue: 0,0:01:18.42,0:01:21.69,zh - 黄色,,0,0,0,,就是遍历所有的项
Dialogue: 0,0:01:22.51,0:01:24.37,en - 白色,,0,0,0,,and then finally sets the next pointer.
Dialogue: 0,0:01:22.51,0:01:24.37,zh - 黄色,,0,0,0,,然后最后设置 next 指针
Dialogue: 0,0:01:25.49,0:01:30.14,en - 白色,,0,0,0,,Now that is going to be slow because we have to iterate to this list much like we saw with the size method before.
Dialogue: 0,0:01:25.49,0:01:30.14,zh - 黄色,,0,0,0,,慢的原因是我们需要遍历整个 List，就像之前的 size 方法一样
Dialogue: 0,0:01:31.59,0:01:34.75,en - 白色,,0,0,0,,So you might think, inspired by what we did with the size method,
Dialogue: 0,0:01:31.59,0:01:34.75,zh - 黄色,,0,0,0,,所以在处理 size 方法的启发下
Dialogue: 0,0:01:34.98,0:01:38.07,en - 白色,,0,0,0,,about ways that we could improve our SLList
Dialogue: 0,0:01:34.98,0:01:38.07,zh - 黄色,,0,0,0,,我们如何改进 SLList
Dialogue: 0,0:01:38.07,0:01:39.78,en - 白色,,0,0,0,,so that add last is also fast.
Dialogue: 0,0:01:38.07,0:01:39.78,zh - 黄色,,0,0,0,,让在末尾添加也很快
Dialogue: 0,0:01:40.01,0:01:41.77,en - 白色,,0,0,0,,So ponder that for a moment and maybe pause.
Dialogue: 0,0:01:40.01,0:01:41.77,zh - 黄色,,0,0,0,,暂停仔细考虑一下
Dialogue: 0,0:01:44.70,0:01:45.23,en - 白色,,0,0,0,,OK.
Dialogue: 0,0:01:44.70,0:01:45.23,zh - 黄色,,0,0,0,,好
Dialogue: 0,0:01:45.84,0:01:47.38,en - 白色,,0,0,0,,So perhaps you've thought about it.
Dialogue: 0,0:01:45.84,0:01:47.38,zh - 黄色,,0,0,0,,也许你已经考虑过了
Dialogue: 0,0:01:47.38,0:01:50.22,en - 白色,,0,0,0,,An you thought, how do we make size fast?
Dialogue: 0,0:01:47.38,0:01:50.22,zh - 黄色,,0,0,0,,你想我们怎么让 size 变快的呢？
Dialogue: 0,0:01:50.22,0:01:54.79,en - 白色,,0,0,0,,Well we cache the size, so maybe I could just cache the last pointer.
Dialogue: 0,0:01:50.22,0:01:54.79,zh - 黄色,,0,0,0,,我们缓存了 size，也许也可以缓存 last 指针
Dialogue: 0,0:01:55.26,0:01:57.72,en - 白色,,0,0,0,,So I would have the size, a sentinel node here,
Dialogue: 0,0:01:55.26,0:01:57.72,zh - 黄色,,0,0,0,,在这里有 size、一个哨兵节点
Dialogue: 0,0:01:57.72,0:01:59.42,en - 白色,,0,0,0,,and the last pointer pointing at the last node.
Dialogue: 0,0:01:57.72,0:01:59.42,zh - 黄色,,0,0,0,,还有 指向最后一个节点的 last 指针
Dialogue: 0,0:02:00.64,0:02:02.88,en - 白色,,0,0,0,,So let's think about all the things you might want to do with a list.
Dialogue: 0,0:02:00.64,0:02:02.88,zh - 黄色,,0,0,0,,让我们考虑一下你可能想用 List 做的所有事情
Dialogue: 0,0:02:03.24,0:02:05.45,en - 白色,,0,0,0,,You want to add to it, get stuff from it, remove it.
Dialogue: 0,0:02:03.24,0:02:05.45,zh - 黄色,,0,0,0,,你想要添加、获取、删除
Dialogue: 0,0:02:06.12,0:02:07.41,en - 白色,,0,0,0,,Now we're going to think big.
Dialogue: 0,0:02:06.12,0:02:07.41,zh - 黄色,,0,0,0,,现在我们有更大的想法
Dialogue: 0,0:02:07.41,0:02:10.64,en - 白色,,0,0,0,,We're going to ponder, if we have a last pointer, is that enough?
Dialogue: 0,0:02:07.41,0:02:10.64,zh - 黄色,,0,0,0,,我们要考虑的是，有 last 指针就够了吗？
Dialogue: 0,0:02:10.83,0:02:13.82,en - 白色,,0,0,0,,Is that enough so that all of these operations will be fast?
Dialogue: 0,0:02:10.83,0:02:13.82,zh - 黄色,,0,0,0,,这足够让所有操作都很快吗？
Dialogue: 0,0:02:14.13,0:02:15.57,en - 白色,,0,0,0,,And if not, which one will be slow?
Dialogue: 0,0:02:14.13,0:02:15.57,zh - 黄色,,0,0,0,,如果不是，哪一个会慢呢？
Dialogue: 0,0:02:16.22,0:02:17.77,en - 白色,,0,0,0,,So I'm not going to spoil that in this video,
Dialogue: 0,0:02:16.22,0:02:17.77,zh - 黄色,,0,0,0,,我不会在这段视频中说
Dialogue: 0,0:02:17.77,0:02:21.64,en - 白色,,0,0,0,,but I'd like you to ponder that on your own.
Dialogue: 0,0:02:17.77,0:02:21.64,zh - 黄色,,0,0,0,,我想让你自己思考一下
Dialogue: 0,0:02:18.64,0:02:21.64,翻译人员专属 - 片尾（左上角）,,0,0,0,,翻译：@隐秀_（seriouszyx）
