[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: 5-3 Doubly Linked Lists.mp4
Video File: 5-3 Doubly Linked Lists.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.500000

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: zh - 黄色,微软雅黑,60,&H0080FFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: en - 白色,Yu Gothic UI,45,&H00FFFFFF,&H000000FF,&H55000000,&H63000000,-1,0,0,0,100,100,0,0,1,4,0,2,3,3,16,1
Style: 翻译人员专属 - 左下角,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,1,42,32,42,1
Style: 翻译人员专属 - 片尾（左上角）,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,7,42,32,42,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:03.00,翻译人员专属 - 片尾（左上角）,,0,0,0,, 翻译：@隐秀_（seriouszyx）
Dialogue: 0,0:00:00.56,0:00:05.31,en - 白色,,0,0,0,,The big aha is to realize that if every node simply had a pointer to whoever was behind it,
Dialogue: 0,0:00:00.56,0:00:05.31,zh - 黄色,,0,0,0,,重点要意识到，如果每个节点都简单地有一个指向其背后的人的指针
Dialogue: 0,0:00:05.60,0:00:07.60,en - 白色,,0,0,0,,we never need to scan forward from the front
Dialogue: 0,0:00:05.60,0:00:07.60,zh - 黄色,,0,0,0,,我们就永远不需要从正面向前扫描
Dialogue: 0,0:00:07.83,0:00:09.06,en - 白色,,0,0,0,,to find our predecessor.
Dialogue: 0,0:00:07.83,0:00:09.06,zh - 黄色,,0,0,0,,去找我们前面的人
Dialogue: 0,0:00:09.50,0:00:13.54,en - 白色,,0,0,0,,So in other words, if fifty had a pointer back to the node containing nine
Dialogue: 0,0:00:09.50,0:00:13.54,zh - 黄色,,0,0,0,,换句话说，如果50有一个指向包含9的节点的指针
Dialogue: 0,0:00:13.64,0:00:16.47,en - 白色,,0,0,0,,and the node with nine in it had a pointer back at three
Dialogue: 0,0:00:13.64,0:00:16.47,zh - 黄色,,0,0,0,,包含9的节点的指针指回3
Dialogue: 0,0:00:16.57,0:00:18.82,en - 白色,,0,0,0,,and this node has a pointer back at the sentinel.
Dialogue: 0,0:00:16.57,0:00:18.82,zh - 黄色,,0,0,0,,这个节点指回哨兵节点
Dialogue: 0,0:00:19.19,0:00:22.26,en - 白色,,0,0,0,,Then if we wanted to find any of our previous is we just follow that pointer.,
Dialogue: 0,0:00:19.19,0:00:22.26,zh - 黄色,,0,0,0,,如果我们想找到以前的任何东西，只需遵循这个指针
Dialogue: 0,0:00:22.89,0:00:25.52,en - 白色,,0,0,0,,so we end up with this step apology here,
Dialogue: 0,0:00:22.89,0:00:25.52,zh - 黄色,,0,0,0,,我们在这里总结
Dialogue: 0,0:00:26.08,0:00:30.59,en - 白色,,0,0,0,,where each node has not just an item and the next pointer but also a previous pointer
Dialogue: 0,0:00:26.08,0:00:30.59,zh - 黄色,,0,0,0,,每个节点不仅有一项和 next 指针，还有 previous 指针
Dialogue: 0,0:00:30.74,0:00:35.44,en - 白色,,0,0,0,,and in that way um this list structure is often called a doubly linked list
Dialogue: 0,0:00:30.74,0:00:35.44,zh - 黄色,,0,0,0,,这样，这个 List 结构通常被称为“双向链表”
Dialogue: 0,0:00:35.76,0:00:36.82,en - 白色,,0,0,0,,each node has two links
Dialogue: 0,0:00:35.76,0:00:36.82,zh - 黄色,,0,0,0,,每个节点有两个链接
Dialogue: 0,0:00:37.40,0:00:41.54,en - 白色,,0,0,0,,and that's as opposed to what we had before which was a singly linked our only forward pointing list
Dialogue: 0,0:00:37.40,0:00:41.54,zh - 黄色,,0,0,0,,而这与我们之前的情况不同，以前是一个单链的、只向前指的 List
Dialogue: 0,0:00:41.66,0:00:45.60,en - 白色,,0,0,0,,and so singly linked list by the way is what SLList  stood for
Dialogue: 0,0:00:41.66,0:00:45.60,zh - 黄色,,0,0,0,,顺便说一下，单链表是 SLList 的代表
Dialogue: 0,0:00:45.87,0:00:46.55,en - 白色,,0,0,0,,now you know
Dialogue: 0,0:00:45.87,0:00:46.55,zh - 黄色,,0,0,0,,现在你知道了
Dialogue: 0,0:00:47.75,0:00:49.34,en - 白色,,0,0,0,,so this approach is wonderful
Dialogue: 0,0:00:47.75,0:00:49.34,zh - 黄色,,0,0,0,,这个方法很棒
Dialogue: 0,0:00:49.84,0:00:51.88,en - 白色,,0,0,0,,And that once we've added these two links
Dialogue: 0,0:00:49.84,0:00:51.88,zh - 黄色,,0,0,0,,一旦我们添加了这两个链接
Dialogue: 0,0:00:52.34,0:00:57.10,en - 白色,,0,0,0,,our add methods faster get methods fast and are removed method from either of the ends as fast
Dialogue: 0,0:00:52.34,0:00:57.10,zh - 黄色,,0,0,0,,我们添加和获取方法更快，而且删除方法一样快
Dialogue: 0,0:00:57.93,0:01:01.45,en - 白色,,0,0,0,,so any operations involving the end of the list will take constant time
Dialogue: 0,0:00:57.93,0:01:01.45,zh - 黄色,,0,0,0,,任何涉及 List 末尾的操作都只需要恒定的时间
Dialogue: 0,0:01:01.72,0:01:03.94,en - 白色,,0,0,0,,though operations in the middle will be slower
Dialogue: 0,0:01:01.72,0:01:03.94,zh - 黄色,,0,0,0,,但是中间的操作速度会更慢
Dialogue: 0,0:01:04.40,0:01:07.00,en - 白色,,0,0,0,,and we'll talk about alternative approaches for dealing with those later
Dialogue: 0,0:01:04.40,0:01:07.00,zh - 黄色,,0,0,0,,我们稍后会讨论处理这些问题的替代方法
Dialogue: 0,0:01:07.78,0:01:11.98,en - 白色,,0,0,0,,but as far as linked lists go this is the way that linked lists are typically done
Dialogue: 0,0:01:07.78,0:01:11.98,zh - 黄色,,0,0,0,,但就链表而言，这是链式链表的典型做法
Dialogue: 0,0:01:13.41,0:01:14.34,en - 白色,,0,0,0,,Now this approach
Dialogue: 0,0:01:13.41,0:01:14.34,zh - 黄色,,0,0,0,,这种方法
Dialogue: 0,0:01:14.91,0:01:15.98,en - 白色,,0,0,0,,while it works
Dialogue: 0,0:01:14.91,0:01:15.98,zh - 黄色,,0,0,0,,当它工作时
Dialogue: 0,0:01:17.45,0:01:19.52,en - 白色,,0,0,0,,it has this one limitation
Dialogue: 0,0:01:17.45,0:01:19.52,zh - 黄色,,0,0,0,,它有一个限制
Dialogue: 0,0:01:20.30,0:01:25.59,en - 白色,,0,0,0,,which You will only really feel and come to understand if you're trying to code this thing up
Dialogue: 0,0:01:20.30,0:01:25.59,zh - 黄色,,0,0,0,,只有你试图用它编码，你才会真正感受并开始理解这一点
Dialogue: 0,0:01:25.98,0:01:28.27,en - 白色,,0,0,0,,there is a special case
Dialogue: 0,0:01:25.98,0:01:28.27,zh - 黄色,,0,0,0,,有一个特例
Dialogue: 0,0:01:28.67,0:01:32.30,en - 白色,,0,0,0,,which is that the last pointer sometimes points at the sentinel
Dialogue: 0,0:01:28.67,0:01:32.30,zh - 黄色,,0,0,0,,那就是 last 指针有时指向哨兵
Dialogue: 0,0:01:32.71,0:01:35.70,en - 白色,,0,0,0,,and it sometimes points out what we'll call a real node
Dialogue: 0,0:01:32.71,0:01:35.70,zh - 黄色,,0,0,0,,有时会指向所谓的真实节点
Dialogue: 0,0:01:36.00,0:01:39.38,en - 白色,,0,0,0,,and so while that might not seem such a big deal
Dialogue: 0,0:01:36.00,0:01:39.38,zh - 黄色,,0,0,0,,虽然这看起来并不是什么大不了的事
Dialogue: 0,0:01:39.38,0:01:40.94,en - 白色,,0,0,0,,here once you try and code it up
Dialogue: 0,0:01:39.38,0:01:40.94,zh - 黄色,,0,0,0,,一旦你尝试用它编码
Dialogue: 0,0:01:41.06,0:01:44.19,en - 白色,,0,0,0,,you'll see that for each of your methods you'll start running into these annoying
Dialogue: 0,0:01:41.06,0:01:44.19,zh - 黄色,,0,0,0,,你在每个方法中都将开始遇到这些恼人的问题
Dialogue: 0,0:01:44.20,0:01:46.80,en - 白色,,0,0,0,,if statements you have to check and see if it's actually the sentinel
Dialogue: 0,0:01:44.20,0:01:46.80,zh - 黄色,,0,0,0,,你必须检查它是否真的是哨兵
Dialogue: 0,0:01:47.33,0:01:48.32,en - 白色,,0,0,0,,so we want to avoid that
Dialogue: 0,0:01:47.33,0:01:48.32,zh - 黄色,,0,0,0,,我们想要避免这种情况
Dialogue: 0,0:01:48.96,0:01:49.86,en - 白色,,0,0,0,,so what we can do
Dialogue: 0,0:01:48.96,0:01:49.86,zh - 黄色,,0,0,0,,我们能做的是
Dialogue: 0,0:01:49.89,0:01:52.79,en - 白色,,0,0,0,,is try and be a little more pure
Dialogue: 0,0:01:49.89,0:01:52.79,zh - 黄色,,0,0,0,,试着让它更纯粹一点
Dialogue: 0,0:01:52.79,0:01:58.80,en - 白色,,0,0,0,,we're going to look to the heavens for inspiration and try and think how can I make this just more perfect.
Dialogue: 0,0:01:52.79,0:01:58.80,zh - 黄色,,0,0,0,,我们仰望苍天寻找灵感，努力思考如何才能让这一切更加完美
Dialogue: 0,0:01:59.87,0:02:02.59,en - 白色,,0,0,0,,So the most natural way to perfect our approach
Dialogue: 0,0:01:59.87,0:02:02.59,zh - 黄色,,0,0,0,,完善我们的方法最自然的方式
Dialogue: 0,0:02:02.86,0:02:04.48,en - 白色,,0,0,0,,is to add a second sentinel
Dialogue: 0,0:02:02.86,0:02:04.48,zh - 黄色,,0,0,0,,就是增加第二个 sentinel
Dialogue: 0,0:02:04.91,0:02:09.14,en - 白色,,0,0,0,,we could say--- instead of having a last pointer that points to the last item
Dialogue: 0,0:02:04.91,0:02:09.14,zh - 黄色,,0,0,0,,last 指针不再指向最后一项
Dialogue: 0,0:02:09.35,0:02:10.96,en - 白色,,0,0,0,,we're going to have a sentinel on both ends
Dialogue: 0,0:02:09.35,0:02:10.96,zh - 黄色,,0,0,0,,我们的两端都会有一个哨兵
Dialogue: 0,0:02:11.27,0:02:15.10,en - 白色,,0,0,0,,because now we have front and back pointers or sorry next and previous pointers
Dialogue: 0,0:02:11.27,0:02:15.10,zh - 黄色,,0,0,0,,因为现在我们有 next 指针和 previous 指针
Dialogue: 0,0:02:15.17,0:02:18.85,en - 白色,,0,0,0,,we can have a sensible that's always at the front and one that's always at the back
Dialogue: 0,0:02:15.17,0:02:18.85,zh - 黄色,,0,0,0,,我们前后都要始终有一个理智的人
Dialogue: 0,0:02:19.50,0:02:26.13,en - 白色,,0,0,0,,so that the empty list has a pointer--- has a sentinel here at the front and a sentinel here at the back 
Dialogue: 0,0:02:19.50,0:02:26.13,zh - 黄色,,0,0,0,,所以空链表在前面有一个哨兵，在后面有一个哨兵
Dialogue: 0,0:02:26.40,0:02:28.14,en - 白色,,0,0,0,,and then as we add items to our list
Dialogue: 0,0:02:26.40,0:02:28.14,zh - 黄色,,0,0,0,,当我们向 List 中添加项目时
Dialogue: 0,0:02:28.37,0:02:31.30,en - 白色,,0,0,0,,we end up just ssliding them in between the two sentinels.
Dialogue: 0,0:02:28.37,0:02:31.30,zh - 黄色,,0,0,0,,把它们塞到两个哨兵中间就行了
Dialogue: 0,0:02:31.99,0:02:33.69,en - 白色,,0,0,0,,so this approach is nicer
Dialogue: 0,0:02:31.99,0:02:33.69,zh - 黄色,,0,0,0,,这种方法更好
Dialogue: 0,0:02:33.72,0:02:36.38,en - 白色,,0,0,0,,it'll be much easier to code up than the naive approach
Dialogue: 0,0:02:33.72,0:02:36.38,zh - 黄色,,0,0,0,,它比幼稚的方法更容易编码
Dialogue: 0,0:02:36.41,0:02:37.82,en - 白色,,0,0,0,,and it'll be equally powerful
Dialogue: 0,0:02:36.41,0:02:37.82,zh - 黄色,,0,0,0,,也同样强大
Dialogue: 0,0:02:38.08,0:02:40.10,en - 白色,,0,0,0,,and this is one approach you can use for project one
Dialogue: 0,0:02:38.08,0:02:40.10,zh - 黄色,,0,0,0,,这是你可以用于项目一的方法
Dialogue: 0,0:02:41.51,0:02:44.99,en - 白色,,0,0,0,,Now while this approach is nice and easy to code up
Dialogue: 0,0:02:41.51,0:02:44.99,zh - 黄色,,0,0,0,,虽然这种方法很好并且很容易编码
Dialogue: 0,0:02:45.36,0:02:47.19,en - 白色,,0,0,0,,I think there's one better approach
Dialogue: 0,0:02:45.36,0:02:47.19,zh - 黄色,,0,0,0,,但我认为有一个更好的方法
Dialogue: 0,0:02:47.58,0:02:52.70,en - 白色,,0,0,0,,this is the approach that if you went up to the mountain where the monk is like hanging out in the mountaintop temple
Dialogue: 0,0:02:47.58,0:02:52.70,zh - 黄色,,0,0,0,,如果你登上山峰，碰到在寺庙闲逛的和尚
Dialogue: 0,0:02:52.70,0:02:55.53,en - 白色,,0,0,0,,and you said what is truly the best doubly linked list 
Dialogue: 0,0:02:52.70,0:02:55.53,zh - 黄色,,0,0,0,,你问什么才是最好的双向链表
Dialogue: 0,0:02:55.53,0:02:57.16,en - 白色,,0,0,0,,and you had to use a long climb
Dialogue: 0,0:02:55.53,0:02:57.16,zh - 黄色,,0,0,0,,你必须花很长时间攀登
Dialogue: 0,0:02:57.54,0:03:01.62,en - 白色,,0,0,0,,and you had to it was just excruciating to get up there and you really are asking for answers
Dialogue: 0,0:02:57.54,0:03:01.62,zh - 黄色,,0,0,0,,你不得不这么做，攀登很痛苦，但你求知若渴
Dialogue: 0,0:03:01.98,0:03:03.24,en - 白色,,0,0,0,,this is what you would get
Dialogue: 0,0:03:01.98,0:03:03.24,zh - 黄色,,0,0,0,,你将得到此法
Dialogue: 0,0:03:04.10,0:03:05.42,en - 白色,,0,0,0,,in this approach
Dialogue: 0,0:03:04.10,0:03:05.42,zh - 黄色,,0,0,0,,在此方法中
Dialogue: 0,0:03:06.17,0:03:09.59,en - 白色,,0,0,0,,instead of having a sentinel on either end, you're going to have one sentinel
Dialogue: 0,0:03:06.17,0:03:09.59,zh - 黄色,,0,0,0,,用一个哨兵代替两端的哨兵
Dialogue: 0,0:03:09.65,0:03:11.65,en - 白色,,0,0,0,,that is both the front  and the back
Dialogue: 0,0:03:09.65,0:03:11.65,zh - 黄色,,0,0,0,,既是最先也是最后
Dialogue: 0,0:03:12.16,0:03:13.34,en - 白色,,0,0,0,,well how can that be?
Dialogue: 0,0:03:12.16,0:03:13.34,zh - 黄色,,0,0,0,,那怎么可能呢？
Dialogue: 0,0:03:13.52,0:03:14.90,en - 白色,,0,0,0,,you might ask your---
Dialogue: 0,0:03:13.52,0:03:14.90,zh - 黄色,,0,0,0,,你可以问问...
Dialogue: 0,0:03:15.45,0:03:16.77,en - 白色,,0,0,0,,You know the monk atop the hill
Dialogue: 0,0:03:15.45,0:03:16.77,zh - 黄色,,0,0,0,,山顶上的和尚
Dialogue: 0,0:03:17.87,0:03:19.11,en - 白色,,0,0,0,,and he might say well
Dialogue: 0,0:03:17.87,0:03:19.11,zh - 黄色,,0,0,0,,他可能会说
Dialogue: 0,0:03:20.43,0:03:22.01,en - 白色,,0,0,0,,whenever you have an empty list
Dialogue: 0,0:03:20.43,0:03:22.01,zh - 黄色,,0,0,0,,你有一个空链表时
Dialogue: 0,0:03:22.21,0:03:24.18,en - 白色,,0,0,0,,the previous is the sentinel itself
Dialogue: 0,0:03:22.21,0:03:24.18,zh - 黄色,,0,0,0,,previous 是哨兵本身
Dialogue: 0,0:03:24.24,0:03:26.28,en - 白色,,0,0,0,,and the next is the sentinel itself
Dialogue: 0,0:03:24.24,0:03:26.28,zh - 黄色,,0,0,0,,next 也是哨兵本身
Dialogue: 0,0:03:26.61,0:03:29.37,en - 白色,,0,0,0,,and at that point you're getting irritated at the monk and you just want answers
Dialogue: 0,0:03:26.61,0:03:29.37,zh - 黄色,,0,0,0,,你为此对和尚很恼火，你只是想要答案
Dialogue: 0,0:03:29.65,0:03:34.88,en - 白色,,0,0,0,,and you have to reflect a little that's part of the glory of some of the most beautiful ideas
Dialogue: 0,0:03:29.65,0:03:34.88,zh - 黄色,,0,0,0,,你必须反思一下，这是最美好想法的闪耀之处
Dialogue: 0,0:03:34.88,0:03:36.84,en - 白色,,0,0,0,,they take a lot of deep thought to really get
Dialogue: 0,0:03:34.88,0:03:36.84,zh - 黄色,,0,0,0,,它们经过深思熟虑才能真正领悟
Dialogue: 0,0:03:37.72,0:03:41.26,en - 白色,,0,0,0,,but in this case as you add items to the to the central list
Dialogue: 0,0:03:37.72,0:03:41.26,zh - 黄色,,0,0,0,,在本例中，当你向 List 中间添加项时
Dialogue: 0,0:03:41.53,0:03:44.74,en - 白色,,0,0,0,,you'll find that there's a very natural place to add them
Dialogue: 0,0:03:41.53,0:03:44.74,zh - 黄色,,0,0,0,,会发现可以很自然地添加
Dialogue: 0,0:03:45.36,0:03:47.02,en - 白色,,0,0,0,,so after we add the numbers three and nine
Dialogue: 0,0:03:45.36,0:03:47.02,zh - 黄色,,0,0,0,,比如添加完3和9后
Dialogue: 0,0:03:47.02,0:03:50.44,en - 白色,,0,0,0,,for example, we would say the sentinel, it's next is three
Dialogue: 0,0:03:47.02,0:03:50.44,zh - 黄色,,0,0,0,,sentinel 的 next 是3
Dialogue: 0,0:03:50.55,0:03:51.88,en - 白色,,0,0,0,,because that's the first thing they added
Dialogue: 0,0:03:50.55,0:03:51.88,zh - 黄色,,0,0,0,,因为这是第一个添加的
Dialogue: 0,0:03:52.08,0:03:53.63,en - 白色,,0,0,0,,and then it's next to nine
Dialogue: 0,0:03:52.08,0:03:53.63,zh - 黄色,,0,0,0,,它的 next 是9
Dialogue: 0,0:03:53.78,0:03:55.51,en - 白色,,0,0,0,,and then its next is the sentinel again
Dialogue: 0,0:03:53.78,0:03:55.51,zh - 黄色,,0,0,0,,然后它的 next 又是 sentinel
Dialogue: 0,0:03:55.99,0:03:58.72,en - 白色,,0,0,0,,so in effect it's kind of like the fact you know the world's round
Dialogue: 0,0:03:55.99,0:03:58.72,zh - 黄色,,0,0,0,,就像地球是圆的
Dialogue: 0,0:03:58.72,0:04:01.59,en - 白色,,0,0,0,,if I keep going in one direction around the world that come back to where I start
Dialogue: 0,0:03:58.72,0:04:01.59,zh - 黄色,,0,0,0,,如果我一直朝一个方向走，就会回到开始的地方
Dialogue: 0,0:04:02.82,0:04:03.94,en - 白色,,0,0,0,,and that's this approach
Dialogue: 0,0:04:02.82,0:04:03.94,zh - 黄色,,0,0,0,,这就是这种方法
Dialogue: 0,0:04:04.34,0:04:06.91,en - 白色,,0,0,0,,and so for example if I do sentinel
Dialogue: 0,0:04:04.34,0:04:06.91,zh - 黄色,,0,0,0,,举个例子，假设我是“哨兵”
Dialogue: 0,0:04:07.24,0:04:10.42,en - 白色,,0,0,0,,dot next dot next dot next
Dialogue: 0,0:04:07.24,0:04:10.42,zh - 黄色,,0,0,0,,next、next 再 next
Dialogue: 0,0:04:10.63,0:04:14.68,en - 白色,,0,0,0,,I'm back to where I started so this arrow in purple is sentinel dot next dot next dot next
Dialogue: 0,0:04:10.63,0:04:14.68,zh - 黄色,,0,0,0,,我回到了开始的地方，所以这个紫色的箭头是哨兵的 next 的 next 的 next
Dialogue: 0,0:04:14.77,0:04:15.76,en - 白色,,0,0,0,,which is just the sentinel
Dialogue: 0,0:04:14.77,0:04:15.76,zh - 黄色,,0,0,0,,还是一个哨兵
Dialogue: 0,0:04:16.57,0:04:20.69,en - 白色,,0,0,0,,And so all this idea may seem more confusing and a little silly.
Dialogue: 0,0:04:16.57,0:04:20.69,zh - 黄色,,0,0,0,,所有这些想法可能看起来更加混乱、有点愚蠢
Dialogue: 0,0:04:21.27,0:04:23.83,en - 白色,,0,0,0,,I encourage you when you do project one do this
Dialogue: 0,0:04:21.27,0:04:23.83,zh - 黄色,,0,0,0,,我鼓励你在项目一时这样做
Dialogue: 0,0:04:24.36,0:04:26.97,en - 白色,,0,0,0,,understand the wisdom of the monk atop the hill
Dialogue: 0,0:04:24.36,0:04:26.97,zh - 黄色,,0,0,0,,理解山顶和尚的智慧
Dialogue: 0,0:04:27.46,0:04:30.31,en - 白色,,0,0,0,,and enlightenment will be yours
Dialogue: 0,0:04:27.46,0:04:30.31,zh - 黄色,,0,0,0,,你就开悟了
Dialogue: 0,0:04:31.33,0:04:36.76,en - 白色,,0,0,0,,so that's it as far as are doubly linked lists go in terms of logical improvements
Dialogue: 0,0:04:31.33,0:04:36.76,zh - 黄色,,0,0,0,,这就是双向链表在逻辑上的改进
Dialogue: 0,0:04:36.96,0:04:38.80,en - 白色,,0,0,0,,and so just to summarize what we did there
Dialogue: 0,0:04:36.96,0:04:38.80,zh - 黄色,,0,0,0,,简单总结一下
Dialogue: 0,0:04:39.52,0:04:44.08,en - 白色,,0,0,0,,improvement seven was adding a dot last pointer  to the last item on the list
Dialogue: 0,0:04:39.52,0:04:44.08,zh - 黄色,,0,0,0,,改进七是添加了指向 List 中最后一项的 last 指针
Dialogue: 0,0:04:44.32,0:04:46.92,en - 白色,,0,0,0,,and dot previous says everything should look behind it
Dialogue: 0,0:04:44.32,0:04:46.92,zh - 黄色,,0,0,0,,.previous 表明一切都应该往后看
Dialogue: 0,0:04:47.29,0:04:48.28,en - 白色,,0,0,0,,but the problem there is that
Dialogue: 0,0:04:47.29,0:04:48.28,zh - 黄色,,0,0,0,,但问题是
Dialogue: 0,0:04:48.28,0:04:50.57,en - 白色,,0,0,0,,for each of our methods one dap with special cases
Dialogue: 0,0:04:48.28,0:04:50.57,zh - 黄色,,0,0,0,,每种方法都要面临一个特殊情况
Dialogue: 0,0:04:51.00,0:04:54.05,en - 白色,,0,0,0,,owing to the fact that to this situation here
Dialogue: 0,0:04:51.00,0:04:54.05,zh - 黄色,,0,0,0,,由于这样的事实
Dialogue: 0,0:04:55.45,0:04:57.45,en - 白色,,0,0,0,,this special case we described before
Dialogue: 0,0:04:55.45,0:04:57.45,zh - 黄色,,0,0,0,,这是之前描述过的特殊情况
Dialogue: 0,0:04:58.20,0:05:01.34,en - 白色,,0,0,0,,so to avoid those special cases in each of our methods
Dialogue: 0,0:04:58.20,0:05:01.34,zh - 黄色,,0,0,0,,为了避免每个方法中的特殊情况
Dialogue: 0,0:05:01.61,0:05:03.40,en - 白色,,0,0,0,,we can either have two sentinels
Dialogue: 0,0:05:01.61,0:05:03.40,zh - 黄色,,0,0,0,,我们设置了两个哨兵
Dialogue: 0,0:05:03.70,0:05:08.50,en - 白色,,0,0,0,,or we can make our list circular and this is the approach I recommend for project one because it's cool
Dialogue: 0,0:05:03.70,0:05:08.50,zh - 黄色,,0,0,0,,或者我们可以使 List 循环，这是我为项目一推荐的方法，因为它很酷
Dialogue: 0,0:05:09.05,0:05:10.78,en - 白色,,0,0,0,,so to summarize all the things we've done
Dialogue: 0,0:05:09.05,0:05:10.78,zh - 黄色,,0,0,0,,所以总结一下
Dialogue: 0,0:05:11.11,0:05:15.19,en - 白色,,0,0,0,,in the previous lecture we made the SLList improvements one through six 
Dialogue: 0,0:05:11.11,0:05:15.19,zh - 黄色,,0,0,0,,在上一讲中，我们对 SLList 进行了一至六的改进
Dialogue: 0,0:05:15.37,0:05:17.83,en - 白色,,0,0,0,,in this lecture we've made this list seven and eight
Dialogue: 0,0:05:15.37,0:05:17.83,zh - 黄色,,0,0,0,,本节课我们进行了七和八的改进
Dialogue: 0,0:05:18.04,0:05:23.74,en - 白色,,0,0,0,,and so there's many more things before we would be up to par with the built-in linked list that's in Java
Dialogue: 0,0:05:18.04,0:05:23.74,zh - 黄色,,0,0,0,,与 Java 内置链表的水平相比，我们仍有很大差距
Dialogue: 0,0:05:23.95,0:05:25.93,en - 白色,,0,0,0,,for example adding exceptions
Dialogue: 0,0:05:23.95,0:05:25.93,zh - 黄色,,0,0,0,,比如添加异常
Dialogue: 0,0:05:25.93,0:05:27.19,en - 白色,,0,0,0,,and various other features
Dialogue: 0,0:05:25.93,0:05:27.19,zh - 黄色,,0,0,0,,以及各种其他功能
Dialogue: 0,0:05:27.30,0:05:28.97,en - 白色,,0,0,0,,and we'll discuss those over the coming weeks
Dialogue: 0,0:05:27.30,0:05:28.97,zh - 黄色,,0,0,0,,我们将在接下来的几周讨论这些问题
Dialogue: 0,0:05:29.06,0:05:31.69,en - 白色,,0,0,0,,but that's the core of what makes a doubly linked list
Dialogue: 0,0:05:29.06,0:05:31.69,zh - 黄色,,0,0,0,,但这就是双重链表的核心所在
Dialogue: 0,0:05:32.86,0:05:37.33,en - 白色,,0,0,0,,so there's a little bit more we're going to say now about making our linked list even better
Dialogue: 0,0:05:32.86,0:05:37.33,zh - 黄色,,0,0,0,,现在我再多说一点，让我们的链表变得更好
Dialogue: 0,0:05:34.33,0:05:37.33,翻译人员专属 - 片尾（左上角）,,0,0,0,, 翻译：@隐秀_（seriouszyx）
